MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;Joc de lumini Brad de Craciun cu 20 de LED-uri
                      00002 ;2023, MPopa
                      00003 ;
                      00004 ;placa de dezvolatre folosita: PicKit1
                      00005 ;proiect realizat in MPLAB V8.92
                      00006 ;
                      00007 ;internal OSC = 4MHz --> o instructiune este executata la Fosc/4 = 1MHz
                      00008 ;timpul de executie este t=1/1000000=1us (o micro secunda)
                      00009 ;pentru un delay de 100us:
                      00010 ;delay = C (o constanta) * 1us
                      00011 ;pentru PWM in asm, urmeaza exemplele din linkul acesta:
                      00012 ;https://www.circuitbread.com/tutorials/pwm-led-dimming-part-7-microcontroller-basics-pic10f200
                      00013 ;https://www.circuitbread.com/tutorials/musical-microcontroller-part-8-microcontroller-basics-pic10f200
                      00014 ;
                      00015 ;pentru creeat delay SW, foloseste aceasta aplicatie:
                      00016 ;https://www.golovchenko.org/home/delay_loops
                      00017 ;
                      00018 ;
                      00019 ;
                      00020 ;===== Program brad versiunea 1:
                      00021 ;===== incepe cu PWM up led_01
                      00022 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00023 ;===== apoi PWM up led_02
                      00024 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00025 ;===== apoi PWM up led_08 
                      00026 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00027 ;===== apoi PWM up led_04
                      00028 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00029 ;===== apoi PWM up led_10
                      00030 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00031 ;===== apoi PWM up led_06
                      00032 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00033 ;===== apoi PWM up led_12
                      00034 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00035 ;===== apoi PWM up led_05
                      00036 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00037 ;===== apoi PWM up led_11 
                      00038 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00039 ;===== apoi PWM up led_03
                      00040 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00041 ;===== apoi PWM up led_09
                      00042 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00043 ;===== apoi PWM up led_07
                      00044 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00045 ;===== apoi PWM up led_19 
                      00046 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00047 ;===== apoi PWM up led_18
                      00048 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00049 ;===== apoi PWM up led_13
                      00050 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00051 ;===== apoi PWM up led_15
                      00052 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00053 ;===== apoi PWM up led_14
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00055 ;===== apoi PWM up led_16
                      00056 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00057 ;===== apoi PWM up led_17
                      00058 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00059 ;===== apoi PWM up led_20
                      00060 ;===== urmeaza secventa de aprindere pseudo-aleatoare a tuturor led-urilor
                      00061 ;===== de la capat
                      00062 ;
                      00063 ;secventa preudo aleatorie: led 1,2,8,4,10,6,12,5,11,3,9,7,19,18,13,15,14,16,17,20 cu pauza de 100ms int
                            re ele
                      00064 ;
                      00065 
                      00066         list      p=12F675      ; list directive to define processor
                      00067         #include <p12f675.inc>  ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC12F675 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00366         LIST
                      00068 
2007   3FC4           00069         __CONFIG  _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _INTRC_OSC_NOCLKOUT & _MCLRE_OFF & _CPD_O
                            FF
                      00070   
                      00071 ;       errorlevel -302         ;desable warning regarding to bank bits memory
                      00072 
                      00073 ;===variabile folosite in bucla PWM si in buclele pentru Delay:
                      00074          cblock 0x20    
  00000020            00075         c1
  00000021            00076         c2
  00000022            00077         d1
  00000023            00078         d2
  00000024            00079         d3
  00000025            00080         aa
  00000026            00081         i       
  00000027            00082         limit
  00000028            00083         j
  00000029            00084         dir
                      00085          endc
                      00086 
                      00087 #define var1    20h
                      00088 
                      00089 ;*************************** DEFINE STATEMENTS ********************************
                      00090 
                      00091 ; define input/output designation for LEDs (what TRISIO will equal)
                      00092 #define TRIS_D01_D02    B'00111100'     ; TRISIO setting for D01 and D02
                      00093 #define TRIS_D03_D04    B'00111001'     ; TRISIO setting for D03 and D04
                      00094 #define TRIS_D05_D06    B'00101011'     ; TRISIO setting for D05 and D06
                      00095 #define TRIS_D07_D08    B'00001111'     ; TRISIO setting for D07 and D08
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00096 #define TRIS_D09_D10    B'00111010'     ; TRISIO setting for D09 and D10
                      00097 #define TRIS_D11_D12    B'00101110'     ; TRISIO setting for D11 and D12
                      00098 #define TRIS_D13_D14    B'00101101'     ; TRISIO setting for D13 and D14
                      00099 #define TRIS_D15_D16    B'00011101'     ; TRISIO setting for D15 and D16
                      00100 #define TRIS_D17_D18    B'00011110'     ; TRISIO setting for D17 and D18
                      00101 #define TRIS_D19_D20    B'00011011'     ; TRISIO setting for D19 and D20
                      00102 #define TRIS_ALL_OUTPUT B'00111111' ; TRISIO settings for all outputs
                      00103 
                      00104 ; define LED state (what GPIO will equal)
                      00105 #define D01_ON  B'00000001'             ; D01 LED
                      00106 #define D02_ON  B'00000010'             ; D02 LED
                      00107 #define D03_ON  B'00000010'             ; D03 LED
                      00108 #define D04_ON  B'00000100'             ; D04 LED
                      00109 #define D05_ON  B'00000100'             ; D05 LED
                      00110 #define D06_ON  B'00010000'             ; D06 LED
                      00111 #define D07_ON  B'00010000'             ; D07 LED
                      00112 #define D08_ON  B'00100000'             ; D08 LED
                      00113 #define D09_ON  B'00000001'             ; D09 LED
                      00114 #define D10_ON  B'00000100'             ; D10 LED
                      00115 #define D11_ON  B'00000001'             ; D11 LED
                      00116 #define D12_ON  B'00010000'             ; D12 LED
                      00117 #define D13_ON  B'00000010'             ; D13 LED
                      00118 #define D14_ON  B'00010000'             ; D14 LED
                      00119 #define D15_ON  B'00000010'             ; D15 LED
                      00120 #define D16_ON  B'00100000'             ; D16 LED
                      00121 #define D17_ON  B'00000001'             ; D17 LED
                      00122 #define D18_ON  B'00100000'             ; D18 LED
                      00123 #define D19_ON  B'00000100'             ; D19 LED
                      00124 #define D20_ON  B'00100000'             ; D20 LED
                      00125 #define LED_OFF B'00000000'             ; LED Off
                      00126 
                      00127 
                      00128 ;****************************** Start of Program ******************************
                      00129         org     0x000           ; processor reset vector
0000   2???           00130         goto Initialize
                      00131 ;******************************************************************************
                      00132 
                      00133 ;       Initialize Special Function Registers     
                      00134 ;******************************************************************************
                      00135 
                      00136 
                      00137 ;       org 0x0002a0            ; Start of Programm Memory Vector
0001                  00138 Initialize
                      00139 ;       Set oscilator:
0001   1683           00140         bsf             STATUS,RP0              ; Bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0002   0090           00141         movwf   OSCCAL                  ; update register with factory cal
0003   1683           00142         bsf     STATUS,RP0              ; Bank 1 
                      00143 
                      00144 ;       Initializare port GPIO:
0004   1283           00145         bcf STATUS, RP0                 ; Bank 0
0005   0185           00146         clrf GPIO                               ; Init GPIO
0006   3007           00147         movlw 07H                               ; Set GP<2:0> to
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007   0099           00148         movwf CMCON                             ; digital IO
0008   1683           00149         bsf STATUS, RP0                 ; Bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0009   019F           00150         clrf ANSEL                              ; Digital I/O
                      00151 
000A   303F           00152         movlw   B'00111111'             ; Set all I/O pins as inputs
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000B   0085           00153         movwf   TRISIO                  ; SET TRISIO register
                      00154 
                      00155 ;       Initializare variabile:
000C   01A7           00156         clrf limit                              ; Clear the PWM limit
000D   01A9           00157         clrf dir                                ; Clear the direction
                      00158 
                      00159 ;       Setare pentru intrerupere:
                      00160 ;******************************************************************************
000E   1683           00161         bsf STATUS, RP0                 ; Bank 1
                      00162 ;       movlw   B'00001000'             ; Set interrupt on change at pin GP3
000F   3000           00163         movlw   B'00000000'             ; Clear interupt on change at pin GP3 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0010   0096           00164         movwf   IOC                             ; Set IOC register
                      00165 
                      00166 
                      00167 ;       movlw   B'10001000'             ; Set interrupts at GPIO port change
0011   3000           00168         movlw   B'00000000'             ; Clear interrupts 
0012   008B           00169         movwf   INTCON                  ; Set INCON register
                      00170 
                      00171 ;******************************************************************************
                      00172 ;******************************** Start Program *******************************
                      00173 ;******************************************************************************
                      00174 
                      00175 ;==========Incercare de randomizare
                      00176 ;Random startup:
                      00177 ;       call 3ffh
                      00178                 
                      00179 ;       subwf var1,F            ;randomizare start-up
                      00180 ;       swapf var1,F
                      00181 ;       comf var1,F
                      00182 ;       addwf var1,W
                      00183 ;       rrf var1,F
                      00184 ;       rrf var1,F
                      00185 ;       addwf var1,F
                      00186 ;       movlw 11111b
                      00187 ;       andwf var1,F
                      00188 ;       goto pauza
                      00189 
                      00190 ;=====Bucla pentru pauza randomizare
                      00191 ;pauza           
                      00192 ;       bsf STATUS,DC
                      00193 ;       btfsc STATUS,DC
                      00194 ;       goto $-1
                      00195 
                      00196 ;       decfsz var1
                      00197 ;       goto pauza
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00198                 
                      00199 ;       goto bucla
                      00200 ;==========Incercare de randomizare
                      00201 
0013                  00202 bucla
                      00203 
0013   3001           00204     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
0014   00A9           00205     MOVWF dir                   ;set PWM up or down
0015   2???           00206         call LOOP_PWM_led_01    ;bucla PWM
0016   2???           00207         call Delay_500ms
                      00208 
0017   2???           00209         call Bucla_random
                      00210 
0018   3001           00211     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
0019   00A9           00212     MOVWF dir                   ;set PWM up or down
001A   2???           00213         call LOOP_PWM_led_02    ;bucla PWM
001B   2???           00214         call Delay_500ms
                      00215 
001C   2???           00216         call Bucla_random
                      00217 
001D   3001           00218     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
001E   00A9           00219     MOVWF dir                   ;set PWM up or down
001F   2???           00220         call LOOP_PWM_led_08    ;bucla PWM
0020   2???           00221         call Delay_500ms
                      00222 
0021   2???           00223         call Bucla_random
                      00224 
0022   3001           00225     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
0023   00A9           00226     MOVWF dir                   ;set PWM up or down
0024   2???           00227         call LOOP_PWM_led_04    ;bucla PWM
0025   2???           00228         call Delay_500ms
                      00229 
0026   2???           00230         call Bucla_random
                      00231 
0027   3001           00232     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
0028   00A9           00233     MOVWF dir                   ;set PWM up or down
0029   2???           00234         call LOOP_PWM_led_10    ;bucla PWM
002A   2???           00235         call Delay_500ms
                      00236 
002B   2???           00237         call Bucla_random
                      00238 
002C   3001           00239     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
002D   00A9           00240     MOVWF dir                   ;set PWM up or down
002E   2???           00241         call LOOP_PWM_led_06    ;bucla PWM
002F   2???           00242         call Delay_500ms
                      00243 
0030   2???           00244         call Bucla_random
                      00245 
0031   3001           00246     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
0032   00A9           00247     MOVWF dir                   ;set PWM up or down
0033   2???           00248         call LOOP_PWM_led_12    ;bucla PWM
0034   2???           00249         call Delay_500ms
                      00250 
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0035   2???           00251         call Bucla_random
                      00252 
0036   3001           00253     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
0037   00A9           00254     MOVWF dir                   ;set PWM up or down
0038   2???           00255         call LOOP_PWM_led_05    ;bucla PWM
0039   2???           00256         call Delay_500ms
                      00257 
003A   2???           00258         call Bucla_random
                      00259 
003B   3001           00260     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
003C   00A9           00261     MOVWF dir                   ;set PWM up or down
003D   2???           00262         call LOOP_PWM_led_11    ;bucla PWM
003E   2???           00263         call Delay_500ms
                      00264 
003F   2???           00265         call Bucla_random
                      00266 
0040   3001           00267     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
0041   00A9           00268     MOVWF dir                   ;set PWM up or down
0042   2???           00269         call LOOP_PWM_led_03    ;bucla PWM
0043   2???           00270         call Delay_500ms
                      00271 
0044   2???           00272         call Bucla_random
                      00273 
0045   3001           00274     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
0046   00A9           00275     MOVWF dir                   ;set PWM up or down
0047   2???           00276         call LOOP_PWM_led_09    ;bucla PWM
0048   2???           00277         call Delay_500ms
                      00278 
0049   2???           00279         call Bucla_random
                      00280 
004A   3001           00281     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
004B   00A9           00282     MOVWF dir                   ;set PWM up or down
004C   2???           00283         call LOOP_PWM_led_07    ;bucla PWM
004D   2???           00284         call Delay_500ms
                      00285 
004E   2???           00286         call Bucla_random
                      00287 
004F   3001           00288     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
0050   00A9           00289     MOVWF dir                   ;set PWM up or down
0051   2???           00290         call LOOP_PWM_led_19    ;bucla PWM
0052   2???           00291         call Delay_500ms
                      00292 
0053   2???           00293         call Bucla_random
                      00294 
0054   3001           00295     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
0055   00A9           00296     MOVWF dir                   ;set PWM up or down
0056   2???           00297         call LOOP_PWM_led_18    ;bucla PWM
0057   2???           00298         call Delay_500ms
                      00299 
0058   2???           00300         call Bucla_random
                      00301 
0059   3001           00302     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
005A   00A9           00303     MOVWF dir                   ;set PWM up or down
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005B   2???           00304         call LOOP_PWM_led_13    ;bucla PWM
005C   2???           00305         call Delay_500ms
                      00306 
005D   2???           00307         call Bucla_random
                      00308 
005E   3001           00309     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
005F   00A9           00310     MOVWF dir                   ;set PWM up or down
0060   2???           00311         call LOOP_PWM_led_15    ;bucla PWM
0061   2???           00312         call Delay_500ms
                      00313 
0062   2???           00314         call Bucla_random
                      00315 
0063   3001           00316     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
0064   00A9           00317     MOVWF dir                   ;set PWM up or down
0065   2???           00318         call LOOP_PWM_led_14    ;bucla PWM
0066   2???           00319         call Delay_500ms
                      00320 
0067   2???           00321         call Bucla_random
                      00322 
0068   3001           00323     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
0069   00A9           00324     MOVWF dir                   ;set PWM up or down
006A   2???           00325         call LOOP_PWM_led_16    ;bucla PWM
006B   2???           00326         call Delay_500ms
                      00327 
006C   2???           00328         call Bucla_random
                      00329 
006D   3001           00330     MOVLW 0x1                           ;1 = PWM 0 -> max; 0 = PWM max -> 0
006E   00A9           00331     MOVWF dir                   ;set PWM up or down
006F   2???           00332         call LOOP_PWM_led_17    ;bucla PWM
0070   2???           00333         call Delay_500ms
                      00334 
0071   2???           00335         call Bucla_random
                      00336 
0072   3001           00337         MOVLW 0x1                       ;1 = PWM 0 -> max; 0 = PWM max -> 0
0073   00A9           00338         MOVWF dir               ;set PWM up or down
0074   2???           00339         call LOOP_PWM_led_20    ;bucla PWM
0075   2???           00340         call Delay_500ms
                      00341 
0076   2???           00342         call Bucla_random
                      00343 
0077   2???           00344         goto bucla
                      00345 
0078                  00346 Bucla_random
0078   2???           00347         call Led_01
0079   2???           00348         call Delay_100ms
                      00349 
007A   2???           00350         call Led_02
007B   2???           00351         call Delay_100ms
                      00352 
007C   2???           00353         call Led_08
007D   2???           00354         call Delay_100ms
                      00355 
007E   2???           00356         call Led_04
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007F   2???           00357         call Delay_100ms
                      00358 
0080   2???           00359         call Led_10
0081   2???           00360         call Delay_100ms
                      00361 
0082   2???           00362         call Led_06
0083   2???           00363         call Delay_100ms
                      00364 
0084   2???           00365         call Led_12
0085   2???           00366         call Delay_100ms
                      00367 
0086   2???           00368         call Led_05
0087   2???           00369         call Delay_100ms
                      00370 
0088   2???           00371         call Led_11
0089   2???           00372         call Delay_100ms
                      00373 
008A   2???           00374         call Led_03
008B   2???           00375         call Delay_100ms
                      00376 
008C   2???           00377         call Led_09
008D   2???           00378         call Delay_100ms
                      00379 
008E   2???           00380         call Led_07
008F   2???           00381         call Delay_100ms        
                      00382 
0090   2???           00383         call Led_19
0091   2???           00384         call Delay_100ms
                      00385 
0092   2???           00386         call Led_18
0093   2???           00387         call Delay_100ms
                      00388 
0094   2???           00389         call Led_13
0095   2???           00390         call Delay_100ms
                      00391 
0096   2???           00392         call Led_15
0097   2???           00393         call Delay_100ms
                      00394 
0098   2???           00395         call Led_14
0099   2???           00396         call Delay_100ms
                      00397 
009A   2???           00398         call Led_16
009B   2???           00399         call Delay_100ms
                      00400 
009C   2???           00401         call Led_17
009D   2???           00402         call Delay_100ms
                      00403 
009E   2???           00404         call Led_20
009F   2???           00405         call Delay_100ms        
                      00406 
                      00407 
00A0                  00408 Led_off
00A0   1683           00409         bsf             STATUS, RP0             ; Bank 1
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A1   303F           00410         movlw   TRIS_ALL_OUTPUT ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A2   0085           00411         movwf   TRISIO
00A3   1283           00412         bcf             STATUS, RP0             ; Bank 0
00A4   3000           00413         movlw   LED_OFF                 ; move predefined value to GPIO
00A5   0085           00414         movwf   GPIO
00A6   0008           00415         return
                      00416 
00A7                  00417 Led_01
00A7   1683           00418         bsf             STATUS, RP0             ; Bank 1
00A8   303C           00419         movlw   TRIS_D01_D02    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A9   0085           00420         movwf   TRISIO
00AA   1283           00421         bcf             STATUS, RP0             ; Bank 0
00AB   3001           00422         movlw   D01_ON                  ; move predefined value to GPIO
00AC   0085           00423         movwf   GPIO
00AD   0008           00424         return
                      00425 
00AE                  00426 Led_02
00AE   1683           00427         bsf             STATUS, RP0             ; Bank 1
00AF   303C           00428         movlw   TRIS_D01_D02    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B0   0085           00429         movwf   TRISIO
00B1   1283           00430         bcf             STATUS, RP0             ; Bank 0
00B2   3002           00431         movlw   D02_ON                  ; move predefined value to GPIO
00B3   0085           00432         movwf   GPIO
00B4   0008           00433         return
                      00434 
00B5                  00435 Led_03
00B5   1683           00436         bsf             STATUS, RP0             ; Bank 1
00B6   3039           00437         movlw   TRIS_D03_D04    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B7   0085           00438         movwf   TRISIO
00B8   1283           00439         bcf             STATUS, RP0             ; Bank 0
00B9   3002           00440         movlw   D03_ON                  ; move predefined value to GPIO
00BA   0085           00441         movwf   GPIO
00BB   0008           00442         return
                      00443 
00BC                  00444 Led_04
00BC   1683           00445         bsf             STATUS, RP0             ; Bank 1
00BD   3039           00446         movlw   TRIS_D03_D04    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BE   0085           00447         movwf   TRISIO
00BF   1283           00448         bcf             STATUS, RP0             ; Bank 0
00C0   3004           00449         movlw   D04_ON                  ; move predefined value to GPIO
00C1   0085           00450         movwf   GPIO
00C2   0008           00451         return
                      00452 
00C3                  00453 Led_05
00C3   1683           00454         bsf             STATUS, RP0             ; Bank 1
00C4   302B           00455         movlw   TRIS_D05_D06    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C5   0085           00456         movwf   TRISIO
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C6   1283           00457         bcf             STATUS, RP0             ; Bank 0
00C7   3004           00458         movlw   D05_ON                  ; move predefined value to GPIO
00C8   0085           00459         movwf   GPIO
00C9   0008           00460         return
                      00461 
00CA                  00462 Led_06
00CA   1683           00463         bsf             STATUS, RP0             ; Bank 1
00CB   302B           00464         movlw   TRIS_D05_D06    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00CC   0085           00465         movwf   TRISIO
00CD   1283           00466         bcf             STATUS, RP0             ; Bank 0
00CE   3010           00467         movlw   D06_ON                  ; move predefined value to GPIO
00CF   0085           00468         movwf   GPIO
00D0   0008           00469         return
                      00470 
00D1                  00471 Led_07
00D1   1683           00472         bsf             STATUS, RP0             ; Bank 1
00D2   300F           00473         movlw   TRIS_D07_D08    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D3   0085           00474         movwf   TRISIO
00D4   1283           00475         bcf             STATUS, RP0             ; Bank 0
00D5   3010           00476         movlw   D07_ON                  ; move predefined value to GPIO
00D6   0085           00477         movwf   GPIO
00D7   0008           00478         return
                      00479 
00D8                  00480 Led_08
00D8   1683           00481         bsf             STATUS, RP0             ; Bank 1
00D9   300F           00482         movlw   TRIS_D07_D08    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00DA   0085           00483         movwf   TRISIO
00DB   1283           00484         bcf             STATUS, RP0             ; Bank 0
00DC   3020           00485         movlw   D08_ON                  ; move predefined value to GPIO
00DD   0085           00486         movwf   GPIO
00DE   0008           00487         return
                      00488 
00DF                  00489 Led_09
00DF   1683           00490         bsf             STATUS, RP0             ; Bank 1
00E0   303A           00491         movlw   TRIS_D09_D10    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E1   0085           00492         movwf   TRISIO
00E2   1283           00493         bcf             STATUS, RP0             ; Bank 0
00E3   3001           00494         movlw   D09_ON                  ; move predefined value to GPIO
00E4   0085           00495         movwf   GPIO
00E5   0008           00496         return
                      00497 
00E6                  00498 Led_10
00E6   1683           00499         bsf             STATUS, RP0             ; Bank 1
00E7   303A           00500         movlw   TRIS_D09_D10    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E8   0085           00501         movwf   TRISIO
00E9   1283           00502         bcf             STATUS, RP0             ; Bank 0
00EA   3004           00503         movlw   D10_ON                  ; move predefined value to GPIO
00EB   0085           00504         movwf   GPIO
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EC   0008           00505         return
                      00506 
00ED                  00507 Led_11
00ED   1683           00508         bsf             STATUS, RP0             ; Bank 1
00EE   302E           00509         movlw   TRIS_D11_D12    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EF   0085           00510         movwf   TRISIO
00F0   1283           00511         bcf             STATUS, RP0             ; Bank 0
00F1   3001           00512         movlw   D11_ON                  ; move predefined value to GPIO
00F2   0085           00513         movwf   GPIO
00F3   0008           00514         return
                      00515 
00F4                  00516 Led_12
00F4   1683           00517         bsf             STATUS, RP0             ; Bank 1
00F5   302E           00518         movlw   TRIS_D11_D12    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00F6   0085           00519         movwf   TRISIO
00F7   1283           00520         bcf             STATUS, RP0             ; Bank 0
00F8   3010           00521         movlw   D12_ON                  ; move predefined value to GPIO
00F9   0085           00522         movwf   GPIO
00FA   0008           00523         return
                      00524 
00FB                  00525 Led_13
00FB   1683           00526         bsf             STATUS, RP0             ; Bank 1
00FC   302D           00527         movlw   TRIS_D13_D14    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00FD   0085           00528         movwf   TRISIO
00FE   1283           00529         bcf             STATUS, RP0             ; Bank 0
00FF   3002           00530         movlw   D13_ON                  ; move predefined value to GPIO
0100   0085           00531         movwf   GPIO
0101   0008           00532         return
                      00533 
0102                  00534 Led_14
0102   1683           00535         bsf             STATUS, RP0             ; Bank 1
0103   302D           00536         movlw   TRIS_D13_D14    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0104   0085           00537         movwf   TRISIO
0105   1283           00538         bcf             STATUS, RP0             ; Bank 0
0106   3010           00539         movlw   D14_ON                  ; move predefined value to GPIO
0107   0085           00540         movwf   GPIO
0108   0008           00541         return
                      00542 
0109                  00543 Led_15
0109   1683           00544         bsf             STATUS, RP0             ; Bank 1
010A   301D           00545         movlw   TRIS_D15_D16    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
010B   0085           00546         movwf   TRISIO
010C   1283           00547         bcf             STATUS, RP0             ; Bank 0
010D   3002           00548         movlw   D15_ON                  ; move predefined value to GPIO
010E   0085           00549         movwf   GPIO
010F   0008           00550         return
                      00551 
0110                  00552 Led_16
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0110   1683           00553         bsf             STATUS, RP0             ; Bank 1
0111   301D           00554         movlw   TRIS_D15_D16    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0112   0085           00555         movwf   TRISIO
0113   1283           00556         bcf             STATUS, RP0             ; Bank 0
0114   3020           00557         movlw   D16_ON                  ; move predefined value to GPIO
0115   0085           00558         movwf   GPIO
0116   0008           00559         return
                      00560 
0117                  00561 Led_17
0117   1683           00562         bsf             STATUS, RP0             ; Bank 1
0118   301E           00563         movlw   TRIS_D17_D18    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0119   0085           00564         movwf   TRISIO
011A   1283           00565         bcf             STATUS, RP0             ; Bank 0
011B   3001           00566         movlw   D17_ON                  ; move predefined value to GPIO
011C   0085           00567         movwf   GPIO
011D   0008           00568         return
                      00569 
011E                  00570 Led_18
011E   1683           00571         bsf             STATUS, RP0             ; Bank 1
011F   301E           00572         movlw   TRIS_D17_D18    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0120   0085           00573         movwf   TRISIO
0121   1283           00574         bcf             STATUS, RP0             ; Bank 0
0122   3020           00575         movlw   D18_ON                  ; move predefined value to GPIO
0123   0085           00576         movwf   GPIO
0124   0008           00577         return
                      00578 
0125                  00579 Led_19
0125   1683           00580         bsf             STATUS, RP0             ; Bank 1
0126   301B           00581         movlw   TRIS_D19_D20    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0127   0085           00582         movwf   TRISIO
0128   1283           00583         bcf             STATUS, RP0             ; Bank 0
0129   3004           00584         movlw   D19_ON                  ; move predefined value to GPIO
012A   0085           00585         movwf   GPIO
012B   0008           00586         return
                      00587 
012C                  00588 Led_20
012C   1683           00589         bsf             STATUS, RP0             ; Bank 1
012D   301B           00590         movlw   TRIS_D19_D20    ; move predefined value to TRISIO
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
012E   0085           00591         movwf   TRISIO
012F   1283           00592         bcf             STATUS, RP0             ; Bank 0
0130   3020           00593         movlw   D20_ON                  ; move predefined value to GPIO
0131   0085           00594         movwf   GPIO
0132   0008           00595         return
                      00596 
                      00597 
                      00598 
                      00599 
                      00600 ;==========Bucla PWM up si down!!!
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00601 ;==========Bucla PWM Led 01 - primul led
                      00602 
0133                  00603 LOOP_PWM_led_01
                      00604 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      00605 ;    MOVWF dir                  ;set PWM up or down             
0133   2???           00606         call Led_01                             ;led ON
0134   30FF           00607     MOVLW 0xFF                          ;Set the initial value of i
0135   00A6           00608     MOVWF i                             ;as 0xFF
                      00609 ;    BSF GPIO, GP1              ;Set GP1 pin
0136                  00610 INT_LOOP_led_01                         ;Beginning of the internal PWM loop
0136   0827           00611     MOVF limit, W               ;Copy the PWM limit value of the W register
0137   0226           00612     SUBWF i, W                          ;Subtract the W from i
0138   1D03           00613     BTFSS STATUS, Z             ;If the result is not 0
0139   2???           00614     GOTO $ + 2                          ;then go to the line 22
                      00615 ;    BCF GPIO, GP1              ;else reset the GP1 pin
013A   2???           00616         call Led_off                    ;led OFF
013B   2???           00617     CALL DELAY_led_01           ;and call the DELAY subroutine
013C   0BA6           00618     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
013D   2???           00619     GOTO INT_LOOP_led_01    ;If not, return to the internal PWM loop start
013E   1C29           00620     BTFSS dir, 0                     
013F   2???           00621     GOTO DEC_BRIGHTNESS_led_01
0140   0BA7           00622     DECFSZ limit, F                  
0141   2???           00623     GOTO LOOP_PWM_led_01                 
0142   2???           00624     GOTO TOGGLE_DIR_led_01       
0143                  00625 DEC_BRIGHTNESS_led_01            
0143   0AA7           00626     INCF limit, F                    
0144   30FF           00627     MOVLW 0xFF                   
0145   0227           00628     SUBWF limit, W                   
0146   1D03           00629     BTFSS STATUS, Z      
0147   2???           00630     GOTO LOOP_PWM_led_01                 
0148                  00631 TOGGLE_DIR_led_01                
0148   1C29           00632     BTFSS dir, 0                     
0149   2???           00633     GOTO SET_DIR_led_01                      
014A   1029           00634     BCF dir, 0                               
                      00635 ;    GOTO LOOP_PWM_led_01                
014B   0008           00636         return
014C                  00637 SET_DIR_led_01                           
014C   1429           00638     BSF dir, 0                               
                      00639 ;    GOTO LOOP_PWM_led_01   
014D   0008           00640         return 
                      00641 
014E                  00642 DELAY_led_01                            ;Start DELAY subroutine here
014E   3005           00643     MOVLW 5;10                          ;Load initial value for the delay    
014F   00A8           00644     MOVWF j                             ;Copy the value to j
0150                  00645 DELAY_LOOP_led_01               ;Start delay loop
0150   0BA8           00646     decfsz j, f                         ;Decrement j and check if it is not zero
0151   2???           00647     goto DELAY_LOOP_led_01  ;If not, then go to the DELAY_LOOP label
                      00648 ;    RETLW 0                            ;Else return from the subroutine
0152   0008           00649         return
                      00650 
                      00651 ;==========Bucla PWM Led 02 - al doilea led
                      00652 
0153                  00653 LOOP_PWM_led_02
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00654 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      00655 ;    MOVWF dir                  ;set PWM up or down             
0153   2???           00656         call Led_02                             ;led ON
0154   30FF           00657     MOVLW 0xFF                          ;Set the initial value of i
0155   00A6           00658     MOVWF i                             ;as 0xFF
                      00659 ;    BSF GPIO, GP1              ;Set GP1 pin
0156                  00660 INT_LOOP_led_02                         ;Beginning of the internal PWM loop
0156   0827           00661     MOVF limit, W               ;Copy the PWM limit value of the W register
0157   0226           00662     SUBWF i, W                          ;Subtract the W from i
0158   1D03           00663     BTFSS STATUS, Z             ;If the result is not 0
0159   2???           00664     GOTO $ + 2                          ;then go to the line 22
                      00665 ;    BCF GPIO, GP1              ;else reset the GP1 pin
015A   2???           00666         call Led_off                    ;led OFF
015B   2???           00667     CALL DELAY_led_02           ;and call the DELAY subroutine
015C   0BA6           00668     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
015D   2???           00669     GOTO INT_LOOP_led_02    ;If not, return to the internal PWM loop start
015E   1C29           00670     BTFSS dir, 0                     
015F   2???           00671     GOTO DEC_BRIGHTNESS_led_02
0160   0BA7           00672     DECFSZ limit, F                  
0161   2???           00673     GOTO LOOP_PWM_led_02                 
0162   2???           00674     GOTO TOGGLE_DIR_led_02       
0163                  00675 DEC_BRIGHTNESS_led_02    
0163   0AA7           00676     INCF limit, F                    
0164   30FF           00677     MOVLW 0xFF                   
0165   0227           00678     SUBWF limit, W                   
0166   1D03           00679     BTFSS STATUS, Z      
0167   2???           00680     GOTO LOOP_PWM_led_02                 
0168                  00681 TOGGLE_DIR_led_02                
0168   1C29           00682     BTFSS dir, 0                     
0169   2???           00683     GOTO SET_DIR_led_02                      
016A   1029           00684     BCF dir, 0                               
                      00685 ;    GOTO LOOP_PWM_led_02                
016B   0008           00686         return
016C                  00687 SET_DIR_led_02                           
016C   1429           00688     BSF dir, 0                               
                      00689 ;    GOTO LOOP_PWM_led_02   
016D   0008           00690         return 
                      00691 
016E                  00692 DELAY_led_02                            ;Start DELAY subroutine here
016E   3005           00693     MOVLW 5;10                          ;Load initial value for the delay    
016F   00A8           00694     MOVWF j                             ;Copy the value to j
0170                  00695 DELAY_LOOP_led_02               ;Start delay loop
0170   0BA8           00696     decfsz j, f                         ;Decrement j and check if it is not zero
0171   2???           00697     goto DELAY_LOOP_led_02  ;If not, then go to the DELAY_LOOP label
                      00698 ;    RETLW 0                            ;Else return from the subroutine
0172   0008           00699         return
                      00700 
                      00701 ;==========Bucla PWM Led 03 - al treilea led
                      00702 
0173                  00703 LOOP_PWM_led_03
                      00704 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      00705 ;    MOVWF dir                  ;set PWM up or down             
0173   2???           00706         call Led_03                             ;led ON
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0174   30FF           00707     MOVLW 0xFF                          ;Set the initial value of i
0175   00A6           00708     MOVWF i                             ;as 0xFF
                      00709 ;    BSF GPIO, GP1              ;Set GP1 pin
0176                  00710 INT_LOOP_led_03                         ;Beginning of the internal PWM loop
0176   0827           00711     MOVF limit, W               ;Copy the PWM limit value of the W register
0177   0226           00712     SUBWF i, W                          ;Subtract the W from i
0178   1D03           00713     BTFSS STATUS, Z             ;If the result is not 0
0179   2???           00714     GOTO $ + 2                          ;then go to the line 22
                      00715 ;    BCF GPIO, GP1              ;else reset the GP1 pin
017A   2???           00716         call Led_off                    ;led OFF
017B   2???           00717     CALL DELAY_led_03           ;and call the DELAY subroutine
017C   0BA6           00718     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
017D   2???           00719     GOTO INT_LOOP_led_03    ;If not, return to the internal PWM loop start
017E   1C29           00720     BTFSS dir, 0                     
017F   2???           00721     GOTO DEC_BRIGHTNESS_led_03
0180   0BA7           00722     DECFSZ limit, F                  
0181   2???           00723     GOTO LOOP_PWM_led_03                 
0182   2???           00724     GOTO TOGGLE_DIR_led_03       
0183                  00725 DEC_BRIGHTNESS_led_03            
0183   0AA7           00726     INCF limit, F                    
0184   30FF           00727     MOVLW 0xFF                   
0185   0227           00728     SUBWF limit, W                   
0186   1D03           00729     BTFSS STATUS, Z      
0187   2???           00730     GOTO LOOP_PWM_led_03                 
0188                  00731 TOGGLE_DIR_led_03                
0188   1C29           00732     BTFSS dir, 0                     
0189   2???           00733     GOTO SET_DIR_led_03                      
018A   1029           00734     BCF dir, 0                               
                      00735 ;    GOTO LOOP_PWM_led_03                
018B   0008           00736         return
018C                  00737 SET_DIR_led_03                           
018C   1429           00738     BSF dir, 0                               
                      00739 ;    GOTO LOOP_PWM_led_03   
018D   0008           00740         return 
                      00741 
018E                  00742 DELAY_led_03                            ;Start DELAY subroutine here
018E   3005           00743     MOVLW 5;10                          ;Load initial value for the delay    
018F   00A8           00744     MOVWF j                             ;Copy the value to j
0190                  00745 DELAY_LOOP_led_03               ;Start delay loop
0190   0BA8           00746     decfsz j, f                         ;Decrement j and check if it is not zero
0191   2???           00747     goto DELAY_LOOP_led_03  ;If not, then go to the DELAY_LOOP label
                      00748 ;    RETLW 0                            ;Else return from the subroutine
0192   0008           00749         return
                      00750 
                      00751 ;==========Bucla PWM Led 04 - al patrulea led
                      00752 
0193                  00753 LOOP_PWM_led_04
                      00754 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      00755 ;    MOVWF dir                  ;set PWM up or down             
0193   2???           00756         call Led_04                             ;led ON
0194   30FF           00757     MOVLW 0xFF                          ;Set the initial value of i
0195   00A6           00758     MOVWF i                             ;as 0xFF
                      00759 ;    BSF GPIO, GP1              ;Set GP1 pin
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0196                  00760 INT_LOOP_led_04                         ;Beginning of the internal PWM loop
0196   0827           00761     MOVF limit, W               ;Copy the PWM limit value of the W register
0197   0226           00762     SUBWF i, W                          ;Subtract the W from i
0198   1D03           00763     BTFSS STATUS, Z             ;If the result is not 0
0199   2???           00764     GOTO $ + 2                          ;then go to the line 22
                      00765 ;    BCF GPIO, GP1              ;else reset the GP1 pin
019A   2???           00766         call Led_off                    ;led OFF
019B   2???           00767     CALL DELAY_led_04           ;and call the DELAY subroutine
019C   0BA6           00768     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
019D   2???           00769     GOTO INT_LOOP_led_04    ;If not, return to the internal PWM loop start
019E   1C29           00770     BTFSS dir, 0                     
019F   2???           00771     GOTO DEC_BRIGHTNESS_led_04
01A0   0BA7           00772     DECFSZ limit, F                  
01A1   2???           00773     GOTO LOOP_PWM_led_04                 
01A2   2???           00774     GOTO TOGGLE_DIR_led_04       
01A3                  00775 DEC_BRIGHTNESS_led_04            
01A3   0AA7           00776     INCF limit, F                    
01A4   30FF           00777     MOVLW 0xFF                   
01A5   0227           00778     SUBWF limit, W                   
01A6   1D03           00779     BTFSS STATUS, Z      
01A7   2???           00780     GOTO LOOP_PWM_led_04                 
01A8                  00781 TOGGLE_DIR_led_04                
01A8   1C29           00782     BTFSS dir, 0                     
01A9   2???           00783     GOTO SET_DIR_led_04                      
01AA   1029           00784     BCF dir, 0                               
                      00785 ;    GOTO LOOP_PWM_led_04                
01AB   0008           00786         return
01AC                  00787 SET_DIR_led_04                           
01AC   1429           00788     BSF dir, 0                               
                      00789 ;    GOTO LOOP_PWM_led_04   
01AD   0008           00790         return 
                      00791 
01AE                  00792 DELAY_led_04                            ;Start DELAY subroutine here
01AE   3005           00793     MOVLW 5;10                          ;Load initial value for the delay    
01AF   00A8           00794     MOVWF j                             ;Copy the value to j
01B0                  00795 DELAY_LOOP_led_04               ;Start delay loop
01B0   0BA8           00796     decfsz j, f                         ;Decrement j and check if it is not zero
01B1   2???           00797     goto DELAY_LOOP_led_04  ;If not, then go to the DELAY_LOOP label
                      00798 ;    RETLW 0                            ;Else return from the subroutine
01B2   0008           00799         return
                      00800 
                      00801 ;==========Bucla PWM Led 05 - al cincilea led
                      00802 
01B3                  00803 LOOP_PWM_led_05
                      00804 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      00805 ;    MOVWF dir                  ;set PWM up or down             
01B3   2???           00806         call Led_05                             ;led ON
01B4   30FF           00807     MOVLW 0xFF                          ;Set the initial value of i
01B5   00A6           00808     MOVWF i                             ;as 0xFF
                      00809 ;    BSF GPIO, GP1              ;Set GP1 pin
01B6                  00810 INT_LOOP_led_05                         ;Beginning of the internal PWM loop
01B6   0827           00811     MOVF limit, W               ;Copy the PWM limit value of the W register
01B7   0226           00812     SUBWF i, W                          ;Subtract the W from i
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B8   1D03           00813     BTFSS STATUS, Z             ;If the result is not 0
01B9   2???           00814     GOTO $ + 2                          ;then go to the line 22
                      00815 ;    BCF GPIO, GP5              ;else reset the GP1 pin
01BA   2???           00816         call Led_off                    ;led OFF
01BB   2???           00817     CALL DELAY_led_05           ;and call the DELAY subroutine
01BC   0BA6           00818     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
01BD   2???           00819     GOTO INT_LOOP_led_05    ;If not, return to the internal PWM loop start
01BE   1C29           00820     BTFSS dir, 0                     
01BF   2???           00821     GOTO DEC_BRIGHTNESS_led_05
01C0   0BA7           00822     DECFSZ limit, F                  
01C1   2???           00823     GOTO LOOP_PWM_led_05                 
01C2   2???           00824     GOTO TOGGLE_DIR_led_05       
01C3                  00825 DEC_BRIGHTNESS_led_05            
01C3   0AA7           00826     INCF limit, F                    
01C4   30FF           00827     MOVLW 0xFF                   
01C5   0227           00828     SUBWF limit, W                   
01C6   1D03           00829     BTFSS STATUS, Z      
01C7   2???           00830     GOTO LOOP_PWM_led_05                 
01C8                  00831 TOGGLE_DIR_led_05                
01C8   1C29           00832     BTFSS dir, 0                     
01C9   2???           00833     GOTO SET_DIR_led_05                      
01CA   1029           00834     BCF dir, 0                               
                      00835 ;    GOTO LOOP_PWM_led_05                
01CB   0008           00836         return
01CC                  00837 SET_DIR_led_05                           
01CC   1429           00838     BSF dir, 0                               
                      00839 ;    GOTO LOOP_PWM_led_05   
01CD   0008           00840         return 
                      00841 
01CE                  00842 DELAY_led_05                            ;Start DELAY subroutine here
01CE   3005           00843     MOVLW 5;10                          ;Load initial value for the delay    
01CF   00A8           00844     MOVWF j                             ;Copy the value to j
01D0                  00845 DELAY_LOOP_led_05               ;Start delay loop
01D0   0BA8           00846     decfsz j, f                         ;Decrement j and check if it is not zero
01D1   2???           00847     goto DELAY_LOOP_led_05  ;If not, then go to the DELAY_LOOP label
                      00848 ;    RETLW 0                            ;Else return from the subroutine
01D2   0008           00849         return
                      00850 
                      00851 ;==========Bucla PWM Led 06 - al saselea led
                      00852 
01D3                  00853 LOOP_PWM_led_06
                      00854 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      00855 ;    MOVWF dir                  ;set PWM up or down             
01D3   2???           00856         call Led_06                             ;led ON
01D4   30FF           00857     MOVLW 0xFF                          ;Set the initial value of i
01D5   00A6           00858     MOVWF i                             ;as 0xFF
                      00859 ;    BSF GPIO, GP1              ;Set GP1 pin
01D6                  00860 INT_LOOP_led_06                         ;Beginning of the internal PWM loop
01D6   0827           00861     MOVF limit, W               ;Copy the PWM limit value of the W register
01D7   0226           00862     SUBWF i, W                          ;Subtract the W from i
01D8   1D03           00863     BTFSS STATUS, Z             ;If the result is not 0
01D9   2???           00864     GOTO $ + 2                          ;then go to the line 22
                      00865 ;    BCF GPIO, GP1              ;else reset the GP1 pin
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DA   2???           00866         call Led_off                    ;led OFF
01DB   2???           00867     CALL DELAY_led_06           ;and call the DELAY subroutine
01DC   0BA6           00868     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
01DD   2???           00869     GOTO INT_LOOP_led_06    ;If not, return to the internal PWM loop start
01DE   1C29           00870     BTFSS dir, 0                     
01DF   2???           00871     GOTO DEC_BRIGHTNESS_led_06
01E0   0BA7           00872     DECFSZ limit, F                  
01E1   2???           00873     GOTO LOOP_PWM_led_06                 
01E2   2???           00874     GOTO TOGGLE_DIR_led_06       
01E3                  00875 DEC_BRIGHTNESS_led_06            
01E3   0AA7           00876     INCF limit, F                    
01E4   30FF           00877     MOVLW 0xFF                   
01E5   0227           00878     SUBWF limit, W                   
01E6   1D03           00879     BTFSS STATUS, Z      
01E7   2???           00880     GOTO LOOP_PWM_led_06                 
01E8                  00881 TOGGLE_DIR_led_06                
01E8   1C29           00882     BTFSS dir, 0                     
01E9   2???           00883     GOTO SET_DIR_led_06                      
01EA   1029           00884     BCF dir, 0                               
                      00885 ;    GOTO LOOP_PWM_led_06                
01EB   0008           00886         return
01EC                  00887 SET_DIR_led_06                           
01EC   1429           00888     BSF dir, 0                               
                      00889 ;    GOTO LOOP_PWM_led_06   
01ED   0008           00890         return 
                      00891 
01EE                  00892 DELAY_led_06                            ;Start DELAY subroutine here
01EE   3005           00893     MOVLW 5;10                          ;Load initial value for the delay    
01EF   00A8           00894     MOVWF j                             ;Copy the value to j
01F0                  00895 DELAY_LOOP_led_06               ;Start delay loop
01F0   0BA8           00896     decfsz j, f                         ;Decrement j and check if it is not zero
01F1   2???           00897     goto DELAY_LOOP_led_06  ;If not, then go to the DELAY_LOOP label
                      00898 ;    RETLW 0                            ;Else return from the subroutine
01F2   0008           00899         return
                      00900 
                      00901 ;==========Bucla PWM Led 07 - al saaptelea led
                      00902 
01F3                  00903 LOOP_PWM_led_07
                      00904 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      00905 ;    MOVWF dir                  ;set PWM up or down             
01F3   2???           00906         call Led_07                             ;led ON
01F4   30FF           00907     MOVLW 0xFF                          ;Set the initial value of i
01F5   00A6           00908     MOVWF i                             ;as 0xFF
                      00909 ;    BSF GPIO, GP1              ;Set GP1 pin
01F6                  00910 INT_LOOP_led_07                         ;Beginning of the internal PWM loop
01F6   0827           00911     MOVF limit, W               ;Copy the PWM limit value of the W register
01F7   0226           00912     SUBWF i, W                          ;Subtract the W from i
01F8   1D03           00913     BTFSS STATUS, Z             ;If the result is not 0
01F9   2???           00914     GOTO $ + 2                          ;then go to the line 22
                      00915 ;    BCF GPIO, GP1              ;else reset the GP1 pin
01FA   2???           00916         call Led_off                    ;led OFF
01FB   2???           00917     CALL DELAY_led_06           ;and call the DELAY subroutine
01FC   0BA6           00918     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FD   2???           00919     GOTO INT_LOOP_led_07    ;If not, return to the internal PWM loop start
01FE   1C29           00920     BTFSS dir, 0                     
01FF   2???           00921     GOTO DEC_BRIGHTNESS_led_07
0200   0BA7           00922     DECFSZ limit, F                  
0201   2???           00923     GOTO LOOP_PWM_led_07                 
0202   2???           00924     GOTO TOGGLE_DIR_led_07       
0203                  00925 DEC_BRIGHTNESS_led_07            
0203   0AA7           00926     INCF limit, F                    
0204   30FF           00927     MOVLW 0xFF                   
0205   0227           00928     SUBWF limit, W                   
0206   1D03           00929     BTFSS STATUS, Z      
0207   2???           00930     GOTO LOOP_PWM_led_07                 
0208                  00931 TOGGLE_DIR_led_07                
0208   1C29           00932     BTFSS dir, 0                     
0209   2???           00933     GOTO SET_DIR_led_07                      
020A   1029           00934     BCF dir, 0                               
                      00935 ;    GOTO LOOP_PWM_led_07                
020B   0008           00936         return
020C                  00937 SET_DIR_led_07                           
020C   1429           00938     BSF dir, 0                               
                      00939 ;    GOTO LOOP_PWM_led_07   
020D   0008           00940         return 
                      00941 
020E                  00942 DELAY_led_07                            ;Start DELAY subroutine here
020E   3005           00943     MOVLW 5;10                          ;Load initial value for the delay    
020F   00A8           00944     MOVWF j                             ;Copy the value to j
0210                  00945 DELAY_LOOP_led_07               ;Start delay loop
0210   0BA8           00946     decfsz j, f                         ;Decrement j and check if it is not zero
0211   2???           00947     goto DELAY_LOOP_led_07  ;If not, then go to the DELAY_LOOP label
                      00948 ;    RETLW 0                            ;Else return from the subroutine
0212   0008           00949         return
                      00950 
                      00951 ;==========Bucla PWM Led 08 - al optulea led
                      00952 
0213                  00953 LOOP_PWM_led_08
                      00954 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      00955 ;    MOVWF dir                  ;set PWM up or down             
0213   2???           00956         call Led_08                             ;led ON
0214   30FF           00957     MOVLW 0xFF                          ;Set the initial value of i
0215   00A6           00958     MOVWF i                             ;as 0xFF
                      00959 ;    BSF GPIO, GP1              ;Set GP1 pin
0216                  00960 INT_LOOP_led_08                         ;Beginning of the internal PWM loop
0216   0827           00961     MOVF limit, W               ;Copy the PWM limit value of the W register
0217   0226           00962     SUBWF i, W                          ;Subtract the W from i
0218   1D03           00963     BTFSS STATUS, Z             ;If the result is not 0
0219   2???           00964     GOTO $ + 2                          ;then go to the line 22
                      00965 ;    BCF GPIO, GP1              ;else reset the GP1 pin
021A   2???           00966         call Led_off                    ;led OFF
021B   2???           00967     CALL DELAY_led_08           ;and call the DELAY subroutine
021C   0BA6           00968     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
021D   2???           00969     GOTO INT_LOOP_led_08    ;If not, return to the internal PWM loop start
021E   1C29           00970     BTFSS dir, 0                     
021F   2???           00971     GOTO DEC_BRIGHTNESS_led_08
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0220   0BA7           00972     DECFSZ limit, F                  
0221   2???           00973     GOTO LOOP_PWM_led_08                 
0222   2???           00974     GOTO TOGGLE_DIR_led_08       
0223                  00975 DEC_BRIGHTNESS_led_08            
0223   0AA7           00976     INCF limit, F                    
0224   30FF           00977     MOVLW 0xFF                   
0225   0227           00978     SUBWF limit, W                   
0226   1D03           00979     BTFSS STATUS, Z      
0227   2???           00980     GOTO LOOP_PWM_led_08                 
0228                  00981 TOGGLE_DIR_led_08                
0228   1C29           00982     BTFSS dir, 0                     
0229   2???           00983     GOTO SET_DIR_led_08                      
022A   1029           00984     BCF dir, 0                               
                      00985 ;    GOTO LOOP_PWM_led_08                
022B   0008           00986         return
022C                  00987 SET_DIR_led_08                           
022C   1429           00988     BSF dir, 0                               
                      00989 ;    GOTO LOOP_PWM_led_08   
022D   0008           00990         return 
                      00991 
022E                  00992 DELAY_led_08                            ;Start DELAY subroutine here
022E   3005           00993     MOVLW 5;10                          ;Load initial value for the delay    
022F   00A8           00994     MOVWF j                             ;Copy the value to j
0230                  00995 DELAY_LOOP_led_08               ;Start delay loop
0230   0BA8           00996     decfsz j, f                         ;Decrement j and check if it is not zero
0231   2???           00997     goto DELAY_LOOP_led_08  ;If not, then go to the DELAY_LOOP label
                      00998 ;    RETLW 0                            ;Else return from the subroutine
0232   0008           00999         return
                      01000 
                      01001 
                      01002 ;==========Bucla PWM Led 09 - al noualea led
                      01003 
0233                  01004 LOOP_PWM_led_09
                      01005 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      01006 ;    MOVWF dir                  ;set PWM up or down             
0233   2???           01007         call Led_09                             ;led ON
0234   30FF           01008     MOVLW 0xFF                          ;Set the initial value of i
0235   00A6           01009     MOVWF i                             ;as 0xFF
                      01010 ;    BSF GPIO, GP1              ;Set GP1 pin
0236                  01011 INT_LOOP_led_09                         ;Beginning of the internal PWM loop
0236   0827           01012     MOVF limit, W               ;Copy the PWM limit value of the W register
0237   0226           01013     SUBWF i, W                          ;Subtract the W from i
0238   1D03           01014     BTFSS STATUS, Z             ;If the result is not 0
0239   2???           01015     GOTO $ + 2                          ;then go to the line 22
                      01016 ;    BCF GPIO, GP1              ;else reset the GP1 pin
023A   2???           01017         call Led_off                    ;led OFF
023B   2???           01018     CALL DELAY_led_09           ;and call the DELAY subroutine
023C   0BA6           01019     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
023D   2???           01020     GOTO INT_LOOP_led_09    ;If not, return to the internal PWM loop start
023E   1C29           01021     BTFSS dir, 0                     
023F   2???           01022     GOTO DEC_BRIGHTNESS_led_09
0240   0BA7           01023     DECFSZ limit, F                  
0241   2???           01024     GOTO LOOP_PWM_led_09                 
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0242   2???           01025     GOTO TOGGLE_DIR_led_09       
0243                  01026 DEC_BRIGHTNESS_led_09            
0243   0AA7           01027     INCF limit, F                    
0244   30FF           01028     MOVLW 0xFF                   
0245   0227           01029     SUBWF limit, W                   
0246   1D03           01030     BTFSS STATUS, Z      
0247   2???           01031     GOTO LOOP_PWM_led_09                 
0248                  01032 TOGGLE_DIR_led_09                
0248   1C29           01033     BTFSS dir, 0                     
0249   2???           01034     GOTO SET_DIR_led_09                      
024A   1029           01035     BCF dir, 0                               
                      01036 ;    GOTO LOOP_PWM_led_09                
024B   0008           01037         return
024C                  01038 SET_DIR_led_09                           
024C   1429           01039     BSF dir, 0                               
                      01040 ;    GOTO LOOP_PWM_led_09   
024D   0008           01041         return 
                      01042 
024E                  01043 DELAY_led_09                            ;Start DELAY subroutine here
024E   3005           01044     MOVLW 5;10                          ;Load initial value for the delay    
024F   00A8           01045     MOVWF j                             ;Copy the value to j
0250                  01046 DELAY_LOOP_led_09               ;Start delay loop
0250   0BA8           01047     decfsz j, f                         ;Decrement j and check if it is not zero
0251   2???           01048     goto DELAY_LOOP_led_09  ;If not, then go to the DELAY_LOOP label
                      01049 ;    RETLW 0                            ;Else return from the subroutine
0252   0008           01050         return
                      01051 
                      01052 
                      01053 ;==========Bucla PWM Led 10 - al zecelea led
                      01054 
0253                  01055 LOOP_PWM_led_10
                      01056 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      01057 ;    MOVWF dir                  ;set PWM up or down             
0253   2???           01058         call Led_10                             ;led ON
0254   30FF           01059     MOVLW 0xFF                          ;Set the initial value of i
0255   00A6           01060     MOVWF i                             ;as 0xFF
                      01061 ;    BSF GPIO, GP1              ;Set GP1 pin
0256                  01062 INT_LOOP_led_10                         ;Beginning of the internal PWM loop
0256   0827           01063     MOVF limit, W               ;Copy the PWM limit value of the W register
0257   0226           01064     SUBWF i, W                          ;Subtract the W from i
0258   1D03           01065     BTFSS STATUS, Z             ;If the result is not 0
0259   2???           01066     GOTO $ + 2                          ;then go to the line 22
                      01067 ;    BCF GPIO, GP1              ;else reset the GP1 pin
025A   2???           01068         call Led_off                    ;led OFF
025B   2???           01069     CALL DELAY_led_10           ;and call the DELAY subroutine
025C   0BA6           01070     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
025D   2???           01071     GOTO INT_LOOP_led_10    ;If not, return to the internal PWM loop start
025E   1C29           01072     BTFSS dir, 0                     
025F   2???           01073     GOTO DEC_BRIGHTNESS_led_10
0260   0BA7           01074     DECFSZ limit, F                  
0261   2???           01075     GOTO LOOP_PWM_led_10                 
0262   2???           01076     GOTO TOGGLE_DIR_led_10       
0263                  01077 DEC_BRIGHTNESS_led_10            
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0263   0AA7           01078     INCF limit, F                    
0264   30FF           01079     MOVLW 0xFF                   
0265   0227           01080     SUBWF limit, W                   
0266   1D03           01081     BTFSS STATUS, Z      
0267   2???           01082     GOTO LOOP_PWM_led_10                 
0268                  01083 TOGGLE_DIR_led_10                
0268   1C29           01084     BTFSS dir, 0                     
0269   2???           01085     GOTO SET_DIR_led_10                      
026A   1029           01086     BCF dir, 0                               
                      01087 ;    GOTO LOOP_PWM_led_10                
026B   0008           01088         return
026C                  01089 SET_DIR_led_10                           
026C   1429           01090     BSF dir, 0                               
                      01091 ;    GOTO LOOP_PWM_led_10   
026D   0008           01092         return 
                      01093 
026E                  01094 DELAY_led_10                            ;Start DELAY subroutine here
026E   3005           01095     MOVLW 5;10                          ;Load initial value for the delay    
026F   00A8           01096     MOVWF j                             ;Copy the value to j
0270                  01097 DELAY_LOOP_led_10               ;Start delay loop
0270   0BA8           01098     decfsz j, f                         ;Decrement j and check if it is not zero
0271   2???           01099     goto DELAY_LOOP_led_10  ;If not, then go to the DELAY_LOOP label
                      01100 ;    RETLW 0                            ;Else return from the subroutine
0272   0008           01101         return
                      01102 
                      01103 ;==========Bucla PWM Led 011 - al unsprezecelea led
                      01104 
0273                  01105 LOOP_PWM_led_11
                      01106 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      01107 ;    MOVWF dir                  ;set PWM up or down             
0273   2???           01108         call Led_11                             ;led ON
0274   30FF           01109     MOVLW 0xFF                          ;Set the initial value of i
0275   00A6           01110     MOVWF i                             ;as 0xFF
                      01111 ;    BSF GPIO, GP1              ;Set GP1 pin
0276                  01112 INT_LOOP_led_11                         ;Beginning of the internal PWM loop
0276   0827           01113     MOVF limit, W               ;Copy the PWM limit value of the W register
0277   0226           01114     SUBWF i, W                          ;Subtract the W from i
0278   1D03           01115     BTFSS STATUS, Z             ;If the result is not 0
0279   2???           01116     GOTO $ + 2                          ;then go to the line 22
                      01117 ;    BCF GPIO, GP1              ;else reset the GP1 pin
027A   2???           01118         call Led_off                    ;led OFF
027B   2???           01119     CALL DELAY_led_11           ;and call the DELAY subroutine
027C   0BA6           01120     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
027D   2???           01121     GOTO INT_LOOP_led_11    ;If not, return to the internal PWM loop start
027E   1C29           01122     BTFSS dir, 0                     
027F   2???           01123     GOTO DEC_BRIGHTNESS_led_11
0280   0BA7           01124     DECFSZ limit, F                  
0281   2???           01125     GOTO LOOP_PWM_led_11                 
0282   2???           01126     GOTO TOGGLE_DIR_led_11       
0283                  01127 DEC_BRIGHTNESS_led_11            
0283   0AA7           01128     INCF limit, F                    
0284   30FF           01129     MOVLW 0xFF                   
0285   0227           01130     SUBWF limit, W                   
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0286   1D03           01131     BTFSS STATUS, Z      
0287   2???           01132     GOTO LOOP_PWM_led_11                 
0288                  01133 TOGGLE_DIR_led_11                
0288   1C29           01134     BTFSS dir, 0                     
0289   2???           01135     GOTO SET_DIR_led_11                      
028A   1029           01136     BCF dir, 0                               
                      01137 ;    GOTO LOOP_PWM_led_11                
028B   0008           01138         return
028C                  01139 SET_DIR_led_11                           
028C   1429           01140     BSF dir, 0                               
                      01141 ;    GOTO LOOP_PWM_led_11   
028D   0008           01142         return 
                      01143 
028E                  01144 DELAY_led_11                            ;Start DELAY subroutine here
028E   3005           01145     MOVLW 5;10                          ;Load initial value for the delay    
028F   00A8           01146     MOVWF j                             ;Copy the value to j
0290                  01147 DELAY_LOOP_led_11               ;Start delay loop
0290   0BA8           01148     decfsz j, f                         ;Decrement j and check if it is not zero
0291   2???           01149     goto DELAY_LOOP_led_11  ;If not, then go to the DELAY_LOOP label
                      01150 ;    RETLW 0                            ;Else return from the subroutine
0292   0008           01151         return
                      01152 
                      01153 ;==========Bucla PWM Led 12 - al doisprezecelea led
                      01154 
0293                  01155 LOOP_PWM_led_12
                      01156 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      01157 ;    MOVWF dir                  ;set PWM up or down             
0293   2???           01158         call Led_12                             ;led ON
0294   30FF           01159     MOVLW 0xFF                          ;Set the initial value of i
0295   00A6           01160     MOVWF i                             ;as 0xFF
                      01161 ;    BSF GPIO, GP1              ;Set GP1 pin
0296                  01162 INT_LOOP_led_12                         ;Beginning of the internal PWM loop
0296   0827           01163     MOVF limit, W               ;Copy the PWM limit value of the W register
0297   0226           01164     SUBWF i, W                          ;Subtract the W from i
0298   1D03           01165     BTFSS STATUS, Z             ;If the result is not 0
0299   2???           01166     GOTO $ + 2                          ;then go to the line 22
                      01167 ;    BCF GPIO, GP1              ;else reset the GP1 pin
029A   2???           01168         call Led_off                    ;led OFF
029B   2???           01169     CALL DELAY_led_12           ;and call the DELAY subroutine
029C   0BA6           01170     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
029D   2???           01171     GOTO INT_LOOP_led_12    ;If not, return to the internal PWM loop start
029E   1C29           01172     BTFSS dir, 0                     
029F   2???           01173     GOTO DEC_BRIGHTNESS_led_12
02A0   0BA7           01174     DECFSZ limit, F                  
02A1   2???           01175     GOTO LOOP_PWM_led_12                 
02A2   2???           01176     GOTO TOGGLE_DIR_led_12       
02A3                  01177 DEC_BRIGHTNESS_led_12            
02A3   0AA7           01178     INCF limit, F                    
02A4   30FF           01179     MOVLW 0xFF                   
02A5   0227           01180     SUBWF limit, W                   
02A6   1D03           01181     BTFSS STATUS, Z      
02A7   2???           01182     GOTO LOOP_PWM_led_12                 
02A8                  01183 TOGGLE_DIR_led_12                
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A8   1C29           01184     BTFSS dir, 0                     
02A9   2???           01185     GOTO SET_DIR_led_12                      
02AA   1029           01186     BCF dir, 0                               
                      01187 ;    GOTO LOOP_PWM_led_12                
02AB   0008           01188         return
02AC                  01189 SET_DIR_led_12                           
02AC   1429           01190     BSF dir, 0                               
                      01191 ;    GOTO LOOP_PWM_led_12   
02AD   0008           01192         return 
                      01193 
02AE                  01194 DELAY_led_12                            ;Start DELAY subroutine here
02AE   3005           01195     MOVLW 5;10                          ;Load initial value for the delay    
02AF   00A8           01196     MOVWF j                             ;Copy the value to j
02B0                  01197 DELAY_LOOP_led_12               ;Start delay loop
02B0   0BA8           01198     decfsz j, f                         ;Decrement j and check if it is not zero
02B1   2???           01199     goto DELAY_LOOP_led_12  ;If not, then go to the DELAY_LOOP label
                      01200 ;    RETLW 0                            ;Else return from the subroutine
02B2   0008           01201         return
                      01202 
                      01203 ;==========Bucla PWM Led 13 - al treisprezecelea led
                      01204 
02B3                  01205 LOOP_PWM_led_13
                      01206 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      01207 ;    MOVWF dir                  ;set PWM up or down             
02B3   2???           01208         call Led_13                             ;led ON
02B4   30FF           01209     MOVLW 0xFF                          ;Set the initial value of i
02B5   00A6           01210     MOVWF i                             ;as 0xFF
                      01211 ;    BSF GPIO, GP1              ;Set GP1 pin
02B6                  01212 INT_LOOP_led_13                         ;Beginning of the internal PWM loop
02B6   0827           01213     MOVF limit, W               ;Copy the PWM limit value of the W register
02B7   0226           01214     SUBWF i, W                          ;Subtract the W from i
02B8   1D03           01215     BTFSS STATUS, Z             ;If the result is not 0
02B9   2???           01216     GOTO $ + 2                          ;then go to the line 22
                      01217 ;    BCF GPIO, GP1              ;else reset the GP1 pin
02BA   2???           01218         call Led_off                    ;led OFF
02BB   2???           01219     CALL DELAY_led_13           ;and call the DELAY subroutine
02BC   0BA6           01220     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
02BD   2???           01221     GOTO INT_LOOP_led_13    ;If not, return to the internal PWM loop start
02BE   1C29           01222     BTFSS dir, 0                     
02BF   2???           01223     GOTO DEC_BRIGHTNESS_led_13
02C0   0BA7           01224     DECFSZ limit, F                  
02C1   2???           01225     GOTO LOOP_PWM_led_13                 
02C2   2???           01226     GOTO TOGGLE_DIR_led_13       
02C3                  01227 DEC_BRIGHTNESS_led_13            
02C3   0AA7           01228     INCF limit, F                    
02C4   30FF           01229     MOVLW 0xFF                   
02C5   0227           01230     SUBWF limit, W                   
02C6   1D03           01231     BTFSS STATUS, Z      
02C7   2???           01232     GOTO LOOP_PWM_led_13                 
02C8                  01233 TOGGLE_DIR_led_13                
02C8   1C29           01234     BTFSS dir, 0                     
02C9   2???           01235     GOTO SET_DIR_led_13                      
02CA   1029           01236     BCF dir, 0                               
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01237 ;    GOTO LOOP_PWM_led_13                
02CB   0008           01238         return
02CC                  01239 SET_DIR_led_13                           
02CC   1429           01240     BSF dir, 0                               
                      01241 ;    GOTO LOOP_PWM_led_13   
02CD   0008           01242         return 
                      01243 
02CE                  01244 DELAY_led_13                            ;Start DELAY subroutine here
02CE   3005           01245     MOVLW 5;10                          ;Load initial value for the delay    
02CF   00A8           01246     MOVWF j                             ;Copy the value to j
02D0                  01247 DELAY_LOOP_led_13               ;Start delay loop
02D0   0BA8           01248     decfsz j, f                         ;Decrement j and check if it is not zero
02D1   2???           01249     goto DELAY_LOOP_led_13  ;If not, then go to the DELAY_LOOP label
                      01250 ;    RETLW 0                            ;Else return from the subroutine
02D2   0008           01251         return
                      01252 
                      01253 ;==========Bucla PWM Led 14 - al paisprezecelea led
                      01254 
02D3                  01255 LOOP_PWM_led_14
                      01256 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      01257 ;    MOVWF dir                  ;set PWM up or down             
02D3   2???           01258         call Led_14                             ;led ON
02D4   30FF           01259     MOVLW 0xFF                          ;Set the initial value of i
02D5   00A6           01260     MOVWF i                             ;as 0xFF
                      01261 ;    BSF GPIO, GP1              ;Set GP1 pin
02D6                  01262 INT_LOOP_led_14                         ;Beginning of the internal PWM loop
02D6   0827           01263     MOVF limit, W               ;Copy the PWM limit value of the W register
02D7   0226           01264     SUBWF i, W                          ;Subtract the W from i
02D8   1D03           01265     BTFSS STATUS, Z             ;If the result is not 0
02D9   2???           01266     GOTO $ + 2                          ;then go to the line 22
                      01267 ;    BCF GPIO, GP1              ;else reset the GP1 pin
02DA   2???           01268         call Led_off                    ;led OFF
02DB   2???           01269     CALL DELAY_led_14           ;and call the DELAY subroutine
02DC   0BA6           01270     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
02DD   2???           01271     GOTO INT_LOOP_led_14    ;If not, return to the internal PWM loop start
02DE   1C29           01272     BTFSS dir, 0                     
02DF   2???           01273     GOTO DEC_BRIGHTNESS_led_14
02E0   0BA7           01274     DECFSZ limit, F                  
02E1   2???           01275     GOTO LOOP_PWM_led_14                 
02E2   2???           01276     GOTO TOGGLE_DIR_led_14       
02E3                  01277 DEC_BRIGHTNESS_led_14            
02E3   0AA7           01278     INCF limit, F                    
02E4   30FF           01279     MOVLW 0xFF                   
02E5   0227           01280     SUBWF limit, W                   
02E6   1D03           01281     BTFSS STATUS, Z      
02E7   2???           01282     GOTO LOOP_PWM_led_14                 
02E8                  01283 TOGGLE_DIR_led_14                
02E8   1C29           01284     BTFSS dir, 0                     
02E9   2???           01285     GOTO SET_DIR_led_14                      
02EA   1029           01286     BCF dir, 0                               
                      01287 ;    GOTO LOOP_PWM_led_14                
02EB   0008           01288         return
02EC                  01289 SET_DIR_led_14                           
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02EC   1429           01290     BSF dir, 0                               
                      01291 ;    GOTO LOOP_PWM_led_14   
02ED   0008           01292         return 
                      01293 
02EE                  01294 DELAY_led_14                            ;Start DELAY subroutine here
02EE   3005           01295     MOVLW 5;10                          ;Load initial value for the delay    
02EF   00A8           01296     MOVWF j                             ;Copy the value to j
02F0                  01297 DELAY_LOOP_led_14               ;Start delay loop
02F0   0BA8           01298     decfsz j, f                         ;Decrement j and check if it is not zero
02F1   2???           01299     goto DELAY_LOOP_led_14  ;If not, then go to the DELAY_LOOP label
                      01300 ;    RETLW 0                            ;Else return from the subroutine
02F2   0008           01301         return
                      01302 
                      01303 ;==========Bucla PWM Led 15 - al cincisprezecelea led
                      01304 
02F3                  01305 LOOP_PWM_led_15
                      01306 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      01307 ;    MOVWF dir                  ;set PWM up or down             
02F3   2???           01308         call Led_15                             ;led ON
02F4   30FF           01309     MOVLW 0xFF                          ;Set the initial value of i
02F5   00A6           01310     MOVWF i                             ;as 0xFF
                      01311 ;    BSF GPIO, GP1              ;Set GP1 pin
02F6                  01312 INT_LOOP_led_15                         ;Beginning of the internal PWM loop
02F6   0827           01313     MOVF limit, W               ;Copy the PWM limit value of the W register
02F7   0226           01314     SUBWF i, W                          ;Subtract the W from i
02F8   1D03           01315     BTFSS STATUS, Z             ;If the result is not 0
02F9   2???           01316     GOTO $ + 2                          ;then go to the line 22
                      01317 ;    BCF GPIO, GP1              ;else reset the GP1 pin
02FA   2???           01318         call Led_off                    ;led OFF
02FB   2???           01319     CALL DELAY_led_15           ;and call the DELAY subroutine
02FC   0BA6           01320     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
02FD   2???           01321     GOTO INT_LOOP_led_15    ;If not, return to the internal PWM loop start
02FE   1C29           01322     BTFSS dir, 0                     
02FF   2???           01323     GOTO DEC_BRIGHTNESS_led_15
0300   0BA7           01324     DECFSZ limit, F                  
0301   2???           01325     GOTO LOOP_PWM_led_15                 
0302   2???           01326     GOTO TOGGLE_DIR_led_15       
0303                  01327 DEC_BRIGHTNESS_led_15            
0303   0AA7           01328     INCF limit, F                    
0304   30FF           01329     MOVLW 0xFF                   
0305   0227           01330     SUBWF limit, W                   
0306   1D03           01331     BTFSS STATUS, Z      
0307   2???           01332     GOTO LOOP_PWM_led_15                 
0308                  01333 TOGGLE_DIR_led_15                
0308   1C29           01334     BTFSS dir, 0                     
0309   2???           01335     GOTO SET_DIR_led_15                      
030A   1029           01336     BCF dir, 0                               
                      01337 ;    GOTO LOOP_PWM_led_15                
030B   0008           01338         return
030C                  01339 SET_DIR_led_15                           
030C   1429           01340     BSF dir, 0                               
                      01341 ;    GOTO LOOP_PWM_led_15   
030D   0008           01342         return 
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01343 
030E                  01344 DELAY_led_15                            ;Start DELAY subroutine here
030E   3005           01345     MOVLW 5;10                          ;Load initial value for the delay    
030F   00A8           01346     MOVWF j                             ;Copy the value to j
0310                  01347 DELAY_LOOP_led_15               ;Start delay loop
0310   0BA8           01348     decfsz j, f                         ;Decrement j and check if it is not zero
0311   2???           01349     goto DELAY_LOOP_led_15  ;If not, then go to the DELAY_LOOP label
                      01350 ;    RETLW 0                            ;Else return from the subroutine
0312   0008           01351         return
                      01352 
                      01353 ;==========Bucla PWM Led 16 - al saisprezecelea led
                      01354 
0313                  01355 LOOP_PWM_led_16
                      01356 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      01357 ;    MOVWF dir                  ;set PWM up or down             
0313   2???           01358         call Led_16                             ;led ON
0314   30FF           01359     MOVLW 0xFF                          ;Set the initial value of i
0315   00A6           01360     MOVWF i                             ;as 0xFF
                      01361 ;    BSF GPIO, GP1              ;Set GP1 pin
0316                  01362 INT_LOOP_led_16                         ;Beginning of the internal PWM loop
0316   0827           01363     MOVF limit, W               ;Copy the PWM limit value of the W register
0317   0226           01364     SUBWF i, W                          ;Subtract the W from i
0318   1D03           01365     BTFSS STATUS, Z             ;If the result is not 0
0319   2???           01366     GOTO $ + 2                          ;then go to the line 22
                      01367 ;    BCF GPIO, GP1              ;else reset the GP1 pin
031A   2???           01368         call Led_off                    ;led OFF
031B   2???           01369     CALL DELAY_led_16           ;and call the DELAY subroutine
031C   0BA6           01370     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
031D   2???           01371     GOTO INT_LOOP_led_16    ;If not, return to the internal PWM loop start
031E   1C29           01372     BTFSS dir, 0                     
031F   2???           01373     GOTO DEC_BRIGHTNESS_led_16
0320   0BA7           01374     DECFSZ limit, F                  
0321   2???           01375     GOTO LOOP_PWM_led_16                 
0322   2???           01376     GOTO TOGGLE_DIR_led_16       
0323                  01377 DEC_BRIGHTNESS_led_16            
0323   0AA7           01378     INCF limit, F                    
0324   30FF           01379     MOVLW 0xFF                   
0325   0227           01380     SUBWF limit, W                   
0326   1D03           01381     BTFSS STATUS, Z      
0327   2???           01382     GOTO LOOP_PWM_led_16                 
0328                  01383 TOGGLE_DIR_led_16                
0328   1C29           01384     BTFSS dir, 0                     
0329   2???           01385     GOTO SET_DIR_led_16                      
032A   1029           01386     BCF dir, 0                               
                      01387 ;    GOTO LOOP_PWM_led_16                
032B   0008           01388         return
032C                  01389 SET_DIR_led_16                           
032C   1429           01390     BSF dir, 0                               
                      01391 ;    GOTO LOOP_PWM_led_16   
032D   0008           01392         return 
                      01393 
032E                  01394 DELAY_led_16                            ;Start DELAY subroutine here
032E   3005           01395     MOVLW 5;10                          ;Load initial value for the delay    
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

032F   00A8           01396     MOVWF j                             ;Copy the value to j
0330                  01397 DELAY_LOOP_led_16               ;Start delay loop
0330   0BA8           01398     decfsz j, f                         ;Decrement j and check if it is not zero
0331   2???           01399     goto DELAY_LOOP_led_16  ;If not, then go to the DELAY_LOOP label
                      01400 ;    RETLW 0                            ;Else return from the subroutine
0332   0008           01401         return
                      01402 
                      01403 ;==========Bucla PWM Led 17 - al saptisprezecelea led
                      01404 
0333                  01405 LOOP_PWM_led_17
                      01406 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      01407 ;    MOVWF dir                  ;set PWM up or down             
0333   2???           01408         call Led_17                             ;led ON
0334   30FF           01409     MOVLW 0xFF                          ;Set the initial value of i
0335   00A6           01410     MOVWF i                             ;as 0xFF
                      01411 ;    BSF GPIO, GP1              ;Set GP1 pin
0336                  01412 INT_LOOP_led_17                         ;Beginning of the internal PWM loop
0336   0827           01413     MOVF limit, W               ;Copy the PWM limit value of the W register
0337   0226           01414     SUBWF i, W                          ;Subtract the W from i
0338   1D03           01415     BTFSS STATUS, Z             ;If the result is not 0
0339   2???           01416     GOTO $ + 2                          ;then go to the line 22
                      01417 ;    BCF GPIO, GP1              ;else reset the GP1 pin
033A   2???           01418         call Led_off                    ;led OFF
033B   2???           01419     CALL DELAY_led_17           ;and call the DELAY subroutine
033C   0BA6           01420     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
033D   2???           01421     GOTO INT_LOOP_led_17    ;If not, return to the internal PWM loop start
033E   1C29           01422     BTFSS dir, 0                     
033F   2???           01423     GOTO DEC_BRIGHTNESS_led_17
0340   0BA7           01424     DECFSZ limit, F                  
0341   2???           01425     GOTO LOOP_PWM_led_17                 
0342   2???           01426     GOTO TOGGLE_DIR_led_17       
0343                  01427 DEC_BRIGHTNESS_led_17            
0343   0AA7           01428     INCF limit, F                    
0344   30FF           01429     MOVLW 0xFF                   
0345   0227           01430     SUBWF limit, W                   
0346   1D03           01431     BTFSS STATUS, Z      
0347   2???           01432     GOTO LOOP_PWM_led_17                 
0348                  01433 TOGGLE_DIR_led_17                
0348   1C29           01434     BTFSS dir, 0                     
0349   2???           01435     GOTO SET_DIR_led_17                      
034A   1029           01436     BCF dir, 0                               
                      01437 ;    GOTO LOOP_PWM_led_17                
034B   0008           01438         return
034C                  01439 SET_DIR_led_17                           
034C   1429           01440     BSF dir, 0                               
                      01441 ;    GOTO LOOP_PWM_led_17   
034D   0008           01442         return 
                      01443 
034E                  01444 DELAY_led_17                            ;Start DELAY subroutine here
034E   3005           01445     MOVLW 5;10                          ;Load initial value for the delay    
034F   00A8           01446     MOVWF j                             ;Copy the value to j
0350                  01447 DELAY_LOOP_led_17               ;Start delay loop
0350   0BA8           01448     decfsz j, f                         ;Decrement j and check if it is not zero
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0351   2???           01449     goto DELAY_LOOP_led_17  ;If not, then go to the DELAY_LOOP label
                      01450 ;    RETLW 0                            ;Else return from the subroutine
0352   0008           01451         return
                      01452 
                      01453 ;==========Bucla PWM Led 18 - al optisprezecelea led
                      01454 
0353                  01455 LOOP_PWM_led_18
                      01456 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      01457 ;    MOVWF dir                  ;set PWM up or down             
0353   2???           01458         call Led_18                             ;led ON
0354   30FF           01459     MOVLW 0xFF                          ;Set the initial value of i
0355   00A6           01460     MOVWF i                             ;as 0xFF
                      01461 ;    BSF GPIO, GP1              ;Set GP1 pin
0356                  01462 INT_LOOP_led_18                         ;Beginning of the internal PWM loop
0356   0827           01463     MOVF limit, W               ;Copy the PWM limit value of the W register
0357   0226           01464     SUBWF i, W                          ;Subtract the W from i
0358   1D03           01465     BTFSS STATUS, Z             ;If the result is not 0
0359   2???           01466     GOTO $ + 2                          ;then go to the line 22
                      01467 ;    BCF GPIO, GP1              ;else reset the GP1 pin
035A   2???           01468         call Led_off                    ;led OFF
035B   2???           01469     CALL DELAY_led_18           ;and call the DELAY subroutine
035C   0BA6           01470     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
035D   2???           01471     GOTO INT_LOOP_led_18    ;If not, return to the internal PWM loop start
035E   1C29           01472     BTFSS dir, 0                     
035F   2???           01473     GOTO DEC_BRIGHTNESS_led_18
0360   0BA7           01474     DECFSZ limit, F                  
0361   2???           01475     GOTO LOOP_PWM_led_18                 
0362   2???           01476     GOTO TOGGLE_DIR_led_18       
0363                  01477 DEC_BRIGHTNESS_led_18            
0363   0AA7           01478     INCF limit, F                    
0364   30FF           01479     MOVLW 0xFF                   
0365   0227           01480     SUBWF limit, W                   
0366   1D03           01481     BTFSS STATUS, Z      
0367   2???           01482     GOTO LOOP_PWM_led_18                 
0368                  01483 TOGGLE_DIR_led_18                
0368   1C29           01484     BTFSS dir, 0                     
0369   2???           01485     GOTO SET_DIR_led_18                      
036A   1029           01486     BCF dir, 0                               
                      01487 ;    GOTO LOOP_PWM_led_218               
036B   0008           01488         return
036C                  01489 SET_DIR_led_18                           
036C   1429           01490     BSF dir, 0                               
                      01491 ;    GOTO LOOP_PWM_led_18   
036D   0008           01492         return 
                      01493 
036E                  01494 DELAY_led_18                            ;Start DELAY subroutine here
036E   3005           01495     MOVLW 5;10                          ;Load initial value for the delay    
036F   00A8           01496     MOVWF j                             ;Copy the value to j
0370                  01497 DELAY_LOOP_led_18               ;Start delay loop
0370   0BA8           01498     decfsz j, f                         ;Decrement j and check if it is not zero
0371   2???           01499     goto DELAY_LOOP_led_18  ;If not, then go to the DELAY_LOOP label
                      01500 ;    RETLW 0                            ;Else return from the subroutine
0372   0008           01501         return
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01502 
                      01503 ;==========Bucla PWM Led 19 - al nouasprezecelea led
                      01504 
0373                  01505 LOOP_PWM_led_19
                      01506 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      01507 ;    MOVWF dir                  ;set PWM up or down             
0373   2???           01508         call Led_10                             ;led ON
0374   30FF           01509     MOVLW 0xFF                          ;Set the initial value of i
0375   00A6           01510     MOVWF i                             ;as 0xFF
                      01511 ;    BSF GPIO, GP1              ;Set GP1 pin
0376                  01512 INT_LOOP_led_19                         ;Beginning of the internal PWM loop
0376   0827           01513     MOVF limit, W               ;Copy the PWM limit value of the W register
0377   0226           01514     SUBWF i, W                          ;Subtract the W from i
0378   1D03           01515     BTFSS STATUS, Z             ;If the result is not 0
0379   2???           01516     GOTO $ + 2                          ;then go to the line 22
                      01517 ;    BCF GPIO, GP1              ;else reset the GP1 pin
037A   2???           01518         call Led_off                    ;led OFF
037B   2???           01519     CALL DELAY_led_19           ;and call the DELAY subroutine
037C   0BA6           01520     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
037D   2???           01521     GOTO INT_LOOP_led_19    ;If not, return to the internal PWM loop start
037E   1C29           01522     BTFSS dir, 0                     
037F   2???           01523     GOTO DEC_BRIGHTNESS_led_19
0380   0BA7           01524     DECFSZ limit, F                  
0381   2???           01525     GOTO LOOP_PWM_led_19                 
0382   2???           01526     GOTO TOGGLE_DIR_led_19       
0383                  01527 DEC_BRIGHTNESS_led_19            
0383   0AA7           01528     INCF limit, F                    
0384   30FF           01529     MOVLW 0xFF                   
0385   0227           01530     SUBWF limit, W                   
0386   1D03           01531     BTFSS STATUS, Z      
0387   2???           01532     GOTO LOOP_PWM_led_19                 
0388                  01533 TOGGLE_DIR_led_19                
0388   1C29           01534     BTFSS dir, 0                     
0389   2???           01535     GOTO SET_DIR_led_19                      
038A   1029           01536     BCF dir, 0                               
                      01537 ;    GOTO LOOP_PWM_led_19                
038B   0008           01538         return
038C                  01539 SET_DIR_led_19                           
038C   1429           01540     BSF dir, 0                               
                      01541 ;    GOTO LOOP_PWM_led_19   
038D   0008           01542         return 
                      01543 
038E                  01544 DELAY_led_19                            ;Start DELAY subroutine here
038E   3005           01545     MOVLW 5;10                          ;Load initial value for the delay    
038F   00A8           01546     MOVWF j                             ;Copy the value to j
0390                  01547 DELAY_LOOP_led_19               ;Start delay loop
0390   0BA8           01548     decfsz j, f                         ;Decrement j and check if it is not zero
0391   2???           01549     goto DELAY_LOOP_led_19  ;If not, then go to the DELAY_LOOP label
                      01550 ;    RETLW 0                            ;Else return from the subroutine
0392   0008           01551         return
                      01552 
                      01553 ;==========Bucla PWM Led 20 - al douazecelea led
                      01554 
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0393                  01555 LOOP_PWM_led_20
                      01556 ;    MOVLW 0x1                          ;1 = PWM 0 -> max; 0 = PWM max -> 0
                      01557 ;    MOVWF dir                  ;set PWM up or down             
0393   2???           01558         call Led_20                             ;led ON
0394   30FF           01559     MOVLW 0xFF                          ;Set the initial value of i
0395   00A6           01560     MOVWF i                             ;as 0xFF
                      01561 ;    BSF GPIO, GP1              ;Set GP1 pin
0396                  01562 INT_LOOP_led_20                         ;Beginning of the internal PWM loop
0396   0827           01563     MOVF limit, W               ;Copy the PWM limit value of the W register
0397   0226           01564     SUBWF i, W                          ;Subtract the W from i
0398   1D03           01565     BTFSS STATUS, Z             ;If the result is not 0
0399   2???           01566     GOTO $ + 2                          ;then go to the line 22
                      01567 ;    BCF GPIO, GP1              ;else reset the GP1 pin
039A   2???           01568         call Led_off                    ;led OFF
039B   2???           01569     CALL DELAY_led_20           ;and call the DELAY subroutine
039C   0BA6           01570     DECFSZ i, F                         ;Decrement the i, and check if the result is 0
039D   2???           01571     GOTO INT_LOOP_led_20    ;If not, return to the internal PWM loop start
039E   1C29           01572     BTFSS dir, 0                     
039F   2???           01573     GOTO DEC_BRIGHTNESS_led_20
03A0   0BA7           01574     DECFSZ limit, F                  
03A1   2???           01575     GOTO LOOP_PWM_led_20                 
03A2   2???           01576     GOTO TOGGLE_DIR_led_20       
03A3                  01577 DEC_BRIGHTNESS_led_20            
03A3   0AA7           01578     INCF limit, F                    
03A4   30FF           01579     MOVLW 0xFF                   
03A5   0227           01580     SUBWF limit, W                   
03A6   1D03           01581     BTFSS STATUS, Z      
03A7   2???           01582     GOTO LOOP_PWM_led_20                 
03A8                  01583 TOGGLE_DIR_led_20                
03A8   1C29           01584     BTFSS dir, 0                     
03A9   2???           01585     GOTO SET_DIR_led_20                      
03AA   1029           01586     BCF dir, 0                               
                      01587 ;    GOTO LOOP_PWM_led_20                
03AB   0008           01588         return
03AC                  01589 SET_DIR_led_20                           
03AC   1429           01590     BSF dir, 0                               
                      01591 ;    GOTO LOOP_PWM_led_20   
03AD   0008           01592         return 
                      01593 
03AE                  01594 DELAY_led_20                            ;Start DELAY subroutine here
03AE   3005           01595     MOVLW 5;10                          ;Load initial value for the delay    
03AF   00A8           01596     MOVWF j                             ;Copy the value to j
03B0                  01597 DELAY_LOOP_led_20               ;Start delay loop
03B0   0BA8           01598     decfsz j, f                         ;Decrement j and check if it is not zero
03B1   2???           01599     goto DELAY_LOOP_led_20  ;If not, then go to the DELAY_LOOP label
                      01600 ;    RETLW 0                            ;Else return from the subroutine
03B2   0008           01601         return
                      01602 
                      01603 
                      01604 
                      01605 
                      01606 
                      01607 ;==========Bucle pentru Delay:
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01608 ;=====Bucla calculata 1ms
03B3                  01609 Delay_1ms ;993 cycles           
03B3   30C6           01610         movlw   0xC6
03B4   00A2           01611         movwf   d1
03B5   3001           01612         movlw   0x01
03B6   00A3           01613         movwf   d2
03B7                  01614 Delay_001
03B7   0BA2           01615         decfsz  d1, f
03B8   2???           01616         goto    $+2
03B9   0BA3           01617         decfsz  d2, f
03BA   2???           01618         goto    Delay_001
                      01619                         ;3 cycles
03BB   2???           01620         goto    $+1
03BC   0000           01621         nop
                      01622                         ;4 cycles (including call)
03BD   0008           01623         return
                      01624 
                      01625 ;=====Bucla calculata 10ms
03BE                  01626 Delay_10ms ;9993 cycles                 
03BE   30CE           01627         movlw   0xCE
03BF   00A2           01628         movwf   d1
03C0   3008           01629         movlw   0x08
03C1   00A3           01630         movwf   d2
03C2                  01631 Delay_010
03C2   0BA2           01632         decfsz  d1, f
03C3   2???           01633         goto    $+2
03C4   0BA3           01634         decfsz  d2, f
03C5   2???           01635         goto    Delay_010
                      01636                         ;3 cycles
03C6   2???           01637         goto    $+1
03C7   0000           01638         nop
                      01639                         ;4 cycles (including call)
03C8   0008           01640         return
                      01641 
                      01642 ;=====Bucla calculata 100ms
03C9                  01643 Delay_100ms ;99993 cycles                       
03C9   301E           01644         movlw   0x1E
03CA   00A2           01645         movwf   d1
03CB   304F           01646         movlw   0x4F
03CC   00A3           01647         movwf   d2
03CD                  01648 Delay_0100
03CD   0BA2           01649         decfsz  d1, f
03CE   2???           01650         goto    $+2
03CF   0BA3           01651         decfsz  d2, f
03D0   2???           01652         goto    Delay_0100
                      01653                         ;3 cycles
03D1   2???           01654         goto    $+1
03D2   0000           01655         nop
                      01656                         ;4 cycles (including call)
03D3   0008           01657         return
                      01658 
                      01659 ;=====Bucla calculata 500ms
03D4                  01660 Delay_500ms ;499994 cycles                      
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D4   3003           01661         movlw   0x03
03D5   00A2           01662         movwf   d1
03D6   3018           01663         movlw   0x18
03D7   00A3           01664         movwf   d2
03D8   3002           01665         movlw   0x02
03D9   00A4           01666         movwf   d3
03DA                  01667 Delay_0500
03DA   0BA2           01668         decfsz  d1, f
03DB   2???           01669         goto    $+2
03DC   0BA3           01670         decfsz  d2, f
03DD   2???           01671         goto    $+2
03DE   0BA4           01672         decfsz  d3, f
03DF   2???           01673         goto    Delay_0500
                      01674                         ;2 cycles
03E0   2???           01675         goto    $+1
                      01676                         ;4 cycles (including call)
03E1   0008           01677         return
                      01678 
3FC4                  01679         END
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

ADCON0                            0000001F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANS0                              00000000
ANS1                              00000001
ANS2                              00000002
ANS3                              00000003
ANSEL                             0000009F
Bucla_random                      00000078
C                                 00000000
CAL0                              00000002
CAL1                              00000003
CAL2                              00000004
CAL3                              00000005
CAL4                              00000006
CAL5                              00000007
CHS0                              00000002
CHS1                              00000003
CINV                              00000004
CIS                               00000003
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000019
CMIE                              00000003
CMIF                              00000003
COUT                              00000006
D01_ON                            B'00000001'
D02_ON                            B'00000010'
D03_ON                            B'00000010'
D04_ON                            B'00000100'
D05_ON                            B'00000100'
D06_ON                            B'00010000'
D07_ON                            B'00010000'
D08_ON                            B'00100000'
D09_ON                            B'00000001'
D10_ON                            B'00000100'
D11_ON                            B'00000001'
D12_ON                            B'00010000'
D13_ON                            B'00000010'
D14_ON                            B'00010000'
D15_ON                            B'00000010'
D16_ON                            B'00100000'
D17_ON                            B'00000001'
D18_ON                            B'00100000'
D19_ON                            B'00000100'
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

D20_ON                            B'00100000'
DC                                00000001
DEC_BRIGHTNESS_led_01             00000143
DEC_BRIGHTNESS_led_02             00000163
DEC_BRIGHTNESS_led_03             00000183
DEC_BRIGHTNESS_led_04             000001A3
DEC_BRIGHTNESS_led_05             000001C3
DEC_BRIGHTNESS_led_06             000001E3
DEC_BRIGHTNESS_led_07             00000203
DEC_BRIGHTNESS_led_08             00000223
DEC_BRIGHTNESS_led_09             00000243
DEC_BRIGHTNESS_led_10             00000263
DEC_BRIGHTNESS_led_11             00000283
DEC_BRIGHTNESS_led_12             000002A3
DEC_BRIGHTNESS_led_13             000002C3
DEC_BRIGHTNESS_led_14             000002E3
DEC_BRIGHTNESS_led_15             00000303
DEC_BRIGHTNESS_led_16             00000323
DEC_BRIGHTNESS_led_17             00000343
DEC_BRIGHTNESS_led_18             00000363
DEC_BRIGHTNESS_led_19             00000383
DEC_BRIGHTNESS_led_20             000003A3
DELAY_LOOP_led_01                 00000150
DELAY_LOOP_led_02                 00000170
DELAY_LOOP_led_03                 00000190
DELAY_LOOP_led_04                 000001B0
DELAY_LOOP_led_05                 000001D0
DELAY_LOOP_led_06                 000001F0
DELAY_LOOP_led_07                 00000210
DELAY_LOOP_led_08                 00000230
DELAY_LOOP_led_09                 00000250
DELAY_LOOP_led_10                 00000270
DELAY_LOOP_led_11                 00000290
DELAY_LOOP_led_12                 000002B0
DELAY_LOOP_led_13                 000002D0
DELAY_LOOP_led_14                 000002F0
DELAY_LOOP_led_15                 00000310
DELAY_LOOP_led_16                 00000330
DELAY_LOOP_led_17                 00000350
DELAY_LOOP_led_18                 00000370
DELAY_LOOP_led_19                 00000390
DELAY_LOOP_led_20                 000003B0
DELAY_led_01                      0000014E
DELAY_led_02                      0000016E
DELAY_led_03                      0000018E
DELAY_led_04                      000001AE
DELAY_led_05                      000001CE
DELAY_led_06                      000001EE
DELAY_led_07                      0000020E
DELAY_led_08                      0000022E
DELAY_led_09                      0000024E
DELAY_led_10                      0000026E
DELAY_led_11                      0000028E
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

DELAY_led_12                      000002AE
DELAY_led_13                      000002CE
DELAY_led_14                      000002EE
DELAY_led_15                      0000030E
DELAY_led_16                      0000032E
DELAY_led_17                      0000034E
DELAY_led_18                      0000036E
DELAY_led_19                      0000038E
DELAY_led_20                      000003AE
Delay_001                         000003B7
Delay_010                         000003C2
Delay_0100                        000003CD
Delay_0500                        000003DA
Delay_100ms                       000003C9
Delay_10ms                        000003BE
Delay_1ms                         000003B3
Delay_500ms                       000003D4
EEADR                             0000009B
EECON1                            0000009C
EECON2                            0000009D
EEDAT                             0000009A
EEDATA                            0000009A
EEIE                              00000007
EEIF                              00000007
F                                 00000001
FSR                               00000004
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
GP0                               00000000
GP1                               00000001
GP2                               00000002
GP3                               00000003
GP4                               00000004
GP5                               00000005
GPIE                              00000003
GPIF                              00000000
GPIO                              00000005
GPIO0                             00000000
GPIO1                             00000001
GPIO2                             00000002
GPIO3                             00000003
GPIO4                             00000004
GPIO5                             00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INT_LOOP_led_01                   00000136
INT_LOOP_led_02                   00000156
INT_LOOP_led_03                   00000176
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

INT_LOOP_led_04                   00000196
INT_LOOP_led_05                   000001B6
INT_LOOP_led_06                   000001D6
INT_LOOP_led_07                   000001F6
INT_LOOP_led_08                   00000216
INT_LOOP_led_09                   00000236
INT_LOOP_led_10                   00000256
INT_LOOP_led_11                   00000276
INT_LOOP_led_12                   00000296
INT_LOOP_led_13                   000002B6
INT_LOOP_led_14                   000002D6
INT_LOOP_led_15                   000002F6
INT_LOOP_led_16                   00000316
INT_LOOP_led_17                   00000336
INT_LOOP_led_18                   00000356
INT_LOOP_led_19                   00000376
INT_LOOP_led_20                   00000396
IOC                               00000096
IOC0                              00000000
IOC1                              00000001
IOC2                              00000002
IOC3                              00000003
IOC4                              00000004
IOC5                              00000005
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IRP                               00000007
Initialize                        00000001
LED_OFF                           B'00000000'
LOOP_PWM_led_01                   00000133
LOOP_PWM_led_02                   00000153
LOOP_PWM_led_03                   00000173
LOOP_PWM_led_04                   00000193
LOOP_PWM_led_05                   000001B3
LOOP_PWM_led_06                   000001D3
LOOP_PWM_led_07                   000001F3
LOOP_PWM_led_08                   00000213
LOOP_PWM_led_09                   00000233
LOOP_PWM_led_10                   00000253
LOOP_PWM_led_11                   00000273
LOOP_PWM_led_12                   00000293
LOOP_PWM_led_13                   000002B3
LOOP_PWM_led_14                   000002D3
LOOP_PWM_led_15                   000002F3
LOOP_PWM_led_16                   00000313
LOOP_PWM_led_17                   00000333
LOOP_PWM_led_18                   00000353
LOOP_PWM_led_19                   00000373
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

LOOP_PWM_led_20                   00000393
Led_01                            000000A7
Led_02                            000000AE
Led_03                            000000B5
Led_04                            000000BC
Led_05                            000000C3
Led_06                            000000CA
Led_07                            000000D1
Led_08                            000000D8
Led_09                            000000DF
Led_10                            000000E6
Led_11                            000000ED
Led_12                            000000F4
Led_13                            000000FB
Led_14                            00000102
Led_15                            00000109
Led_16                            00000110
Led_17                            00000117
Led_18                            0000011E
Led_19                            00000125
Led_20                            0000012C
Led_off                           000000A0
NOT_BOD                           00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_GPPU                          00000007
NOT_PD                            00000003
NOT_POR                           00000001
NOT_T1SYNC                        00000002
NOT_TO                            00000004
OPTION_REG                        00000081
OSCCAL                            00000090
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
RD                                00000000
RP0                               00000005
RP1                               00000006
SET_DIR_led_01                    0000014C
SET_DIR_led_02                    0000016C
SET_DIR_led_03                    0000018C
SET_DIR_led_04                    000001AC
SET_DIR_led_05                    000001CC
SET_DIR_led_06                    000001EC
SET_DIR_led_07                    0000020C
SET_DIR_led_08                    0000022C
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

SET_DIR_led_09                    0000024C
SET_DIR_led_10                    0000026C
SET_DIR_led_11                    0000028C
SET_DIR_led_12                    000002AC
SET_DIR_led_13                    000002CC
SET_DIR_led_14                    000002EC
SET_DIR_led_15                    0000030C
SET_DIR_led_16                    0000032C
SET_DIR_led_17                    0000034C
SET_DIR_led_18                    0000036C
SET_DIR_led_19                    0000038C
SET_DIR_led_20                    000003AC
STATUS                            00000003
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1IE                              00000000
T1IF                              00000000
T1OSCEN                           00000003
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TOGGLE_DIR_led_01                 00000148
TOGGLE_DIR_led_02                 00000168
TOGGLE_DIR_led_03                 00000188
TOGGLE_DIR_led_04                 000001A8
TOGGLE_DIR_led_05                 000001C8
TOGGLE_DIR_led_06                 000001E8
TOGGLE_DIR_led_07                 00000208
TOGGLE_DIR_led_08                 00000228
TOGGLE_DIR_led_09                 00000248
TOGGLE_DIR_led_10                 00000268
TOGGLE_DIR_led_11                 00000288
TOGGLE_DIR_led_12                 000002A8
TOGGLE_DIR_led_13                 000002C8
TOGGLE_DIR_led_14                 000002E8
TOGGLE_DIR_led_15                 00000308
TOGGLE_DIR_led_16                 00000328
TOGGLE_DIR_led_17                 00000348
TOGGLE_DIR_led_18                 00000368
TOGGLE_DIR_led_19                 00000388
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

TOGGLE_DIR_led_20                 000003A8
TRISIO                            00000085
TRISIO0                           00000000
TRISIO1                           00000001
TRISIO2                           00000002
TRISIO3                           00000003
TRISIO4                           00000004
TRISIO5                           00000005
TRIS_ALL_OUTPUT                   B'00111111'
TRIS_D01_D02                      B'00111100'
TRIS_D03_D04                      B'00111001'
TRIS_D05_D06                      B'00101011'
TRIS_D07_D08                      B'00001111'
TRIS_D09_D10                      B'00111010'
TRIS_D11_D12                      B'00101110'
TRIS_D13_D14                      B'00101101'
TRIS_D15_D16                      B'00011101'
TRIS_D17_D18                      B'00011110'
TRIS_D19_D20                      B'00011011'
VCFG                              00000006
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000099
VREN                              00000007
VRR                               00000005
W                                 00000000
WPU                               00000095
WPU0                              00000000
WPU1                              00000001
WPU2                              00000002
WPU4                              00000004
WPU5                              00000005
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_.org_0_0139                      00000139
_.org_0_0159                      00000159
_.org_0_0179                      00000179
_.org_0_0199                      00000199
_.org_0_01B9                      000001B9
_.org_0_01D9                      000001D9
_.org_0_01F9                      000001F9
_.org_0_0219                      00000219
_.org_0_0239                      00000239
_.org_0_0259                      00000259
_.org_0_0279                      00000279
_.org_0_0299                      00000299
_.org_0_02B9                      000002B9
_.org_0_02D9                      000002D9
_.org_0_02F9                      000002F9
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_0319                      00000319
_.org_0_0339                      00000339
_.org_0_0359                      00000359
_.org_0_0379                      00000379
_.org_0_0399                      00000399
_.org_0_03B8                      000003B8
_.org_0_03BB                      000003BB
_.org_0_03C3                      000003C3
_.org_0_03C6                      000003C6
_.org_0_03CE                      000003CE
_.org_0_03D1                      000003D1
_.org_0_03DB                      000003DB
_.org_0_03DD                      000003DD
_.org_0_03E0                      000003E0
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00002006
_EC_OSC                           00003FFB
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FOSC_EC                          00003FFB
_FOSC_EXTRCCLK                    00003FFF
_FOSC_EXTRCIO                     00003FFE
_FOSC_HS                          00003FFA
_FOSC_INTRCCLK                    00003FFD
_FOSC_INTRCIO                     00003FFC
_FOSC_LP                          00003FF8
_FOSC_XT                          00003FF9
_HS_OSC                           00003FFA
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDTE_OFF                         00003FF7
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_XT_OSC                           00003FF9
__12F675                          00000001
MPASM  5.51            BRAD DE CRACIUN V1.ASM   3-15-2023  17:34:19         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

__DEBUG                           1
aa                                00000025
bucla                             00000013
c1                                00000020
c2                                00000021
d1                                00000022
d2                                00000023
d3                                00000024
dir                               00000029
i                                 00000026
j                                 00000028
limit                             00000027
var1                              20h

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    25 reported,     0 suppressed

